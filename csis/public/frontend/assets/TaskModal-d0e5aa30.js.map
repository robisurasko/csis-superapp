{"version":3,"file":"TaskModal-d0e5aa30.js","sources":["../../../../frontend/src/components/Modals/TaskModal.vue"],"sourcesContent":["<template>\n  <Dialog v-model=\"show\" :options=\"{\n    size: 'xl',\n    actions: [\n      {\n        label: editMode ? __('Update') : __('Create'),\n        variant: 'solid',\n        onClick: () => updateTask(),\n      },\n    ],\n  }\">\n    <template #body-title>\n      <div class=\"flex items-center gap-3\">\n        <h3 class=\"text-2xl font-semibold leading-6 text-ink-gray-9\">\n          {{ editMode ? __('Edit Task') : __('Create Task') }}\n        </h3>\n        <Button v-if=\"task?.reference_docname\" size=\"sm\" :label=\"task.reference_doctype == 'CRM Deal'\n          ? __('Open Deal')\n          : __('Open Lead')\n          \" @click=\"redirect()\">\n          <template #suffix>\n            <ArrowUpRightIcon class=\"w-4 h-4\" />\n          </template>\n        </Button>\n      </div>\n    </template>\n    <template #body-content>\n      <div class=\"flex flex-col gap-4\">\n        <div>\n          <FormControl ref=\"title\" :label=\"__('Title')\" v-model=\"_task.title\" :placeholder=\"__('Call with John Doe')\"\n            required />\n        </div>\n        <div>\n          <div class=\"mb-1.5 text-xs text-ink-gray-5\">\n            {{ __('Description') }}\n          </div>\n          <TextEditor variant=\"outline\" ref=\"description\"\n            editor-class=\"!prose-sm overflow-auto min-h-[180px] max-h-80 py-1.5 px-2 rounded border border-[--surface-gray-2] bg-surface-gray-2 placeholder-ink-gray-4 hover:border-outline-gray-modals hover:bg-surface-gray-3 hover:shadow-sm focus:bg-surface-white focus:border-outline-gray-4 focus:shadow-sm focus:ring-0 focus-visible:ring-2 focus-visible:ring-outline-gray-3 text-ink-gray-8 transition-colors\"\n            :bubbleMenu=\"true\" :content=\"_task.description\" @change=\"(val) => (_task.description = val)\" :placeholder=\"__('Took a call with John Doe and discussed the new project.')\n              \" />\n        </div>\n        <div class=\"flex flex-wrap items-center gap-2\">\n          <Dropdown :options=\"taskStatusOptions(updateTaskStatus)\">\n            <Button :label=\"_task.status\" class=\"justify-between w-full\">\n              <template #prefix>\n                <TaskStatusIcon :status=\"_task.status\" />\n              </template>\n            </Button>\n          </Dropdown>\n          <Link class=\"form-control\" :value=\"getUser(_task.assigned_to).full_name\" doctype=\"User\"\n            @change=\"(option) => (_task.assigned_to = option)\" :placeholder=\"__('John Doe')\" :hideMe=\"true\">\n          <template #prefix>\n            <UserAvatar class=\"mr-2 !h-4 !w-4\" :user=\"_task.assigned_to\" />\n          </template>\n          <template #item-prefix=\"{ option }\">\n            <UserAvatar class=\"mr-2\" :user=\"option.value\" size=\"sm\" />\n          </template>\n          <template #item-label=\"{ option }\">\n            <Tooltip :text=\"option.value\">\n              <div class=\"cursor-pointer text-ink-gray-9\">\n                {{ getUser(option.value).full_name }}\n              </div>\n            </Tooltip>\n          </template>\n          </Link>\n          <DateTimePicker class=\"datepicker w-36\" v-model=\"_task.due_date\" :placeholder=\"__('01/04/2024 11:30 PM')\"\n            :formatter=\"(date) => getFormat(date, '', true, true)\" input-class=\"border-none\" />\n          <Dropdown :options=\"taskPriorityOptions(updateTaskPriority)\">\n            <Button :label=\"_task.priority\" class=\"justify-between w-full\">\n              <template #prefix>\n                <TaskPriorityIcon :priority=\"_task.priority\" />\n              </template>\n            </Button>\n          </Dropdown>\n        </div>\n        <ErrorMessage class=\"mt-4\" v-if=\"error\" :message=\"__(error)\" />\n      </div>\n    </template>\n  </Dialog>\n</template>\n\n<script setup>\nimport TaskStatusIcon from '@/components/Icons/TaskStatusIcon.vue'\nimport TaskPriorityIcon from '@/components/Icons/TaskPriorityIcon.vue'\nimport ArrowUpRightIcon from '@/components/Icons/ArrowUpRightIcon.vue'\nimport UserAvatar from '@/components/UserAvatar.vue'\nimport Link from '@/components/Controls/Link.vue'\nimport { taskStatusOptions, taskPriorityOptions, getFormat } from '@/utils'\nimport { usersStore } from '@/stores/users'\nimport { capture } from '@/telemetry'\nimport { TextEditor, Dropdown, Tooltip, call, DateTimePicker } from 'frappe-ui'\nimport { useOnboarding } from 'frappe-ui/frappe'\nimport { ref, watch, nextTick, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\n\nconst props = defineProps({\n  task: {\n    type: Object,\n    default: {},\n  },\n  doctype: {\n    type: String,\n    default: 'CRM Lead',\n  },\n  doc: {\n    type: String,\n    default: '',\n  },\n})\n\nconst show = defineModel()\nconst tasks = defineModel('reloadTasks')\n\nconst emit = defineEmits(['updateTask', 'after'])\n\nconst router = useRouter()\nconst { getUser } = usersStore()\nconst { updateOnboardingStep } = useOnboarding('frappecrm')\n\nconst error = ref(null)\nconst title = ref(null)\nconst editMode = ref(false)\nconst _task = ref({\n  title: '',\n  description: '',\n  assigned_to: '',\n  due_date: '',\n  status: 'Backlog',\n  priority: 'Low',\n  reference_doctype: props.doctype,\n  reference_docname: null,\n})\n\nfunction updateTaskStatus(status) {\n  _task.value.status = status\n}\n\nfunction updateTaskPriority(priority) {\n  _task.value.priority = priority\n}\n\nfunction redirect() {\n  if (!props.task?.reference_docname) return\n  let name = props.task.reference_doctype == 'CRM Deal' ? 'Deal' : 'Lead'\n  let params = { leadId: props.task.reference_docname }\n  if (name == 'Deal') {\n    params = { dealId: props.task.reference_docname }\n  }\n  router.push({ name: name, params: params })\n}\n\nasync function updateTask() {\n  if (!_task.value.assigned_to) {\n    _task.value.assigned_to = getUser().name\n  }\n  if (_task.value.name) {\n    let d = await call('frappe.client.set_value', {\n      doctype: 'CRM Task',\n      name: _task.value.name,\n      fieldname: _task.value,\n    })\n    if (d.name) {\n      tasks.value?.reload()\n      emit('after', d)\n    }\n  } else {\n    let d = await call('frappe.client.insert', {\n      doc: {\n        doctype: 'CRM Task',\n        reference_doctype: props.doctype,\n        reference_docname: props.doc || null,\n        ..._task.value,\n      },\n    }, {\n      onError: (err) => {\n        if (err.error.exc_type == 'MandatoryError') {\n          error.value = \"Title is mandatory\"\n        }\n      }\n    })\n    if (d.name) {\n      updateOnboardingStep('create_first_task')\n      capture('task_created')\n      tasks.value?.reload()\n      emit('after', d, true)\n    }\n  }\n  show.value = false\n}\n\nfunction render() {\n  editMode.value = false\n  nextTick(() => {\n    title.value?.el?.focus?.()\n    _task.value = { ...props.task }\n    if (_task.value.title) {\n      editMode.value = true\n    }\n  })\n}\n\nonMounted(() => show.value && render())\n\nwatch(show, (value) => {\n  if (!value) return\n  render()\n})\n</script>\n\n<style scoped>\n:deep(.datepicker svg) {\n  width: 0.875rem;\n  height: 0.875rem;\n}\n</style>\n"],"names":["props","__props","show","_useModel","tasks","emit","__emit","router","useRouter","getUser","usersStore","updateOnboardingStep","useOnboarding","error","ref","title","editMode","_task","updateTaskStatus","status","updateTaskPriority","priority","redirect","_a","name","params","updateTask","d","call","err","capture","_b","render","nextTick","_c","onMounted","watch","value"],"mappings":"qiCA+FA,MAAMA,EAAQC,EAeRC,EAAOC,EAAYF,EAAA,YAAA,EACnBG,EAAQD,EAAWF,EAAC,aAAa,EAEjCI,EAAOC,EAEPC,EAASC,EAAU,EACnB,CAAE,QAAAC,CAAS,EAAGC,EAAW,EACzB,CAAE,qBAAAC,CAAoB,EAAKC,GAAc,WAAW,EAEpDC,EAAQC,EAAI,IAAI,EAChBC,EAAQD,EAAI,IAAI,EAChBE,EAAWF,EAAI,EAAK,EACpBG,EAAQH,EAAI,CAChB,MAAO,GACP,YAAa,GACb,YAAa,GACb,SAAU,GACV,OAAQ,UACR,SAAU,MACV,kBAAmBd,EAAM,QACzB,kBAAmB,IACrB,CAAC,EAED,SAASkB,EAAiBC,EAAQ,CAChCF,EAAM,MAAM,OAASE,CACvB,CAEA,SAASC,EAAmBC,EAAU,CACpCJ,EAAM,MAAM,SAAWI,CACzB,CAEA,SAASC,GAAW,OAClB,GAAI,GAACC,EAAAvB,EAAM,OAAN,MAAAuB,EAAY,mBAAmB,OACpC,IAAIC,EAAOxB,EAAM,KAAK,mBAAqB,WAAa,OAAS,OAC7DyB,EAAS,CAAE,OAAQzB,EAAM,KAAK,iBAAkB,EAChDwB,GAAQ,SACVC,EAAS,CAAE,OAAQzB,EAAM,KAAK,iBAAkB,GAElDO,EAAO,KAAK,CAAE,KAAMiB,EAAM,OAAQC,EAAQ,CAC5C,CAEA,eAAeC,GAAa,SAI1B,GAHKT,EAAM,MAAM,cACfA,EAAM,MAAM,YAAcR,EAAS,EAAC,MAElCQ,EAAM,MAAM,KAAM,CACpB,IAAIU,EAAI,MAAMC,EAAK,0BAA2B,CAC5C,QAAS,WACT,KAAMX,EAAM,MAAM,KAClB,UAAWA,EAAM,KACvB,CAAK,EACGU,EAAE,QACJJ,EAAAnB,EAAM,QAAN,MAAAmB,EAAa,SACblB,EAAK,QAASsB,CAAC,EAErB,KAAS,CACL,IAAIA,EAAI,MAAMC,EAAK,uBAAwB,CACzC,IAAK,CACH,QAAS,WACT,kBAAmB5B,EAAM,QACzB,kBAAmBA,EAAM,KAAO,KAChC,GAAGiB,EAAM,KACV,CACP,EAAO,CACD,QAAUY,GAAQ,CACZA,EAAI,MAAM,UAAY,mBACxBhB,EAAM,MAAQ,qBAElB,CACN,CAAK,EACGc,EAAE,OACJhB,EAAqB,mBAAmB,EACxCmB,GAAQ,cAAc,GACtBC,EAAA3B,EAAM,QAAN,MAAA2B,EAAa,SACb1B,EAAK,QAASsB,EAAG,EAAI,EAEzB,CACAzB,EAAK,MAAQ,EACf,CAEA,SAAS8B,GAAS,CAChBhB,EAAS,MAAQ,GACjBiB,GAAS,IAAM,YACbC,GAAAH,GAAAR,EAAAR,EAAM,QAAN,YAAAQ,EAAa,KAAb,YAAAQ,EAAiB,QAAjB,MAAAG,EAAA,KAAAH,GACAd,EAAM,MAAQ,CAAE,GAAGjB,EAAM,IAAK,EAC1BiB,EAAM,MAAM,QACdD,EAAS,MAAQ,GAEvB,CAAG,CACH,CAEA,OAAAmB,EAAU,IAAMjC,EAAK,OAAS8B,GAAQ,EAEtCI,EAAMlC,EAAOmC,GAAU,CAChBA,GACLL,EAAO,CACT,CAAC"}