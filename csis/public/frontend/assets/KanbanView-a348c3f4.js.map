{"version":3,"file":"KanbanView-a348c3f4.js","sources":["../../../../frontend/src/components/Kanban/KanbanView.vue"],"sourcesContent":["<template>\n  <div class=\"flex overflow-x-auto h-full\">\n    <Draggable\n      v-if=\"columns\"\n      :list=\"columns\"\n      item-key=\"column\"\n      @end=\"updateColumn\"\n      :delay=\"isTouchScreenDevice() ? 200 : 0\"\n      class=\"flex sm:mx-2.5 mx-2 pb-3.5\"\n    >\n      <template #item=\"{ element: column }\">\n        <div\n          v-if=\"!column.column.delete\"\n          class=\"flex flex-col gap-2.5 min-w-72 w-72 hover:bg-surface-gray-2 rounded-lg p-2.5\"\n        >\n          <div class=\"flex gap-2 items-center group justify-between\">\n            <div class=\"flex items-center text-base\">\n              <NestedPopover>\n                <template #target>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    class=\"hover:!bg-surface-gray-2\"\n                  >\n                    <IndicatorIcon :class=\"parseColor(column.column.color)\" />\n                  </Button>\n                </template>\n                <template #body=\"{ close }\">\n                  <div\n                    class=\"flex flex-col gap-3 px-3 py-2.5 min-w-40 rounded-lg bg-surface-modal shadow-2xl ring-1 ring-black ring-opacity-5 focus:outline-none\"\n                  >\n                    <div class=\"flex gap-1\">\n                      <Button\n                        variant=\"ghost\"\n                        v-for=\"color in colors\"\n                        :key=\"color\"\n                        @click=\"() => (column.column.color = color)\"\n                      >\n                        <IndicatorIcon :class=\"parseColor(color)\" />\n                      </Button>\n                    </div>\n                    <div class=\"flex flex-row-reverse\">\n                      <Button\n                        variant=\"solid\"\n                        :label=\"__('Apply')\"\n                        @click=\"updateColumn\"\n                      />\n                    </div>\n                  </div>\n                </template>\n              </NestedPopover>\n              <div class=\"text-ink-gray-9\">{{ column.column.name }}</div>\n            </div>\n            <div class=\"flex\">\n              <Dropdown :options=\"actions(column)\">\n                <template #default>\n                  <Button\n                    class=\"hidden group-hover:flex\"\n                    icon=\"more-horizontal\"\n                    variant=\"ghost\"\n                  />\n                </template>\n              </Dropdown>\n              <Button\n                icon=\"plus\"\n                variant=\"ghost\"\n                @click=\"options.onNewClick(column)\"\n              />\n            </div>\n          </div>\n          <div class=\"overflow-y-auto flex flex-col gap-2 h-full\">\n            <Draggable\n              :list=\"column.data\"\n              group=\"fields\"\n              item-key=\"name\"\n              class=\"flex flex-col gap-3.5 flex-1\"\n              @end=\"updateColumn\"\n              :delay=\"isTouchScreenDevice() ? 200 : 0\"\n              :data-column=\"column.column.name\"\n            >\n              <template #item=\"{ element: fields }\">\n                <component\n                  :is=\"options.getRoute ? 'router-link' : 'div'\"\n                  class=\"pt-3 px-3.5 pb-2.5 rounded-lg border bg-surface-white text-base flex flex-col text-ink-gray-9\"\n                  :data-name=\"fields.name\"\n                  v-bind=\"{\n                    to: options.getRoute ? options.getRoute(fields) : undefined,\n                    onClick: options.onClick\n                      ? () => options.onClick(fields)\n                      : undefined,\n                  }\"\n                >\n                  <slot\n                    name=\"title\"\n                    v-bind=\"{ fields, titleField, itemName: fields.name }\"\n                  >\n                    <div class=\"h-5 flex items-center\">\n                      <div v-if=\"fields[titleField]\">\n                        {{ fields[titleField] }}\n                      </div>\n                      <div class=\"text-ink-gray-4\" v-else>\n                        {{ __('No Title') }}\n                      </div>\n                    </div>\n                  </slot>\n                  <div class=\"border-b h-px my-2.5\" />\n\n                  <div class=\"flex flex-col gap-3.5\">\n                    <template v-for=\"value in column.fields\" :key=\"value\">\n                      <slot\n                        name=\"fields\"\n                        v-bind=\"{\n                          fields,\n                          fieldName: value,\n                          itemName: fields.name,\n                        }\"\n                      >\n                        <div v-if=\"fields[value]\" class=\"truncate\">\n                          {{ fields[value] }}\n                        </div>\n                      </slot>\n                    </template>\n                  </div>\n                  <div class=\"border-b h-px mt-2.5 mb-2\" />\n                  <slot name=\"actions\" v-bind=\"{ itemName: fields.name }\">\n                    <div class=\"flex gap-2 items-center justify-between\">\n                      <div></div>\n                      <Button icon=\"plus\" variant=\"ghost\" @click.stop.prevent />\n                    </div>\n                  </slot>\n                </component>\n              </template>\n            </Draggable>\n            <div\n              v-if=\"column.column.count < column.column.all_count\"\n              class=\"flex items-center justify-center\"\n            >\n              <Button\n                :label=\"__('Load More')\"\n                @click=\"emit('loadMore', column.column.name)\"\n              />\n            </div>\n          </div>\n        </div>\n      </template>\n    </Draggable>\n    <div v-if=\"deletedColumns.length\" class=\"shrink-0 min-w-64\">\n      <Autocomplete\n        value=\"\"\n        :options=\"deletedColumns\"\n        @change=\"(e) => addColumn(e)\"\n      >\n        <template #target=\"{ togglePopover }\">\n          <Button\n            class=\"w-full mt-2.5 mb-1 mr-5\"\n            @click=\"togglePopover()\"\n            :label=\"__('Add Column')\"\n          >\n            <template #prefix>\n              <FeatherIcon name=\"plus\" class=\"h-4\" />\n            </template>\n          </Button>\n        </template>\n      </Autocomplete>\n    </div>\n  </div>\n</template>\n<script setup>\nimport Autocomplete from '@/components/frappe-ui/Autocomplete.vue'\nimport NestedPopover from '@/components/NestedPopover.vue'\nimport IndicatorIcon from '@/components/Icons/IndicatorIcon.vue'\nimport { isTouchScreenDevice, colors, parseColor } from '@/utils'\nimport Draggable from 'vuedraggable'\nimport { Dropdown } from 'frappe-ui'\nimport { computed } from 'vue'\n\nconst props = defineProps({\n  options: {\n    type: Object,\n    default: () => ({\n      getRoute: null,\n      onClick: null,\n      onNewClick: null,\n    }),\n  },\n})\n\nconst emit = defineEmits(['update', 'loadMore'])\n\nconst kanban = defineModel()\n\nconst titleField = computed(() => {\n  return kanban.value?.data?.title_field\n})\n\nconst columns = computed(() => {\n  if (!kanban.value?.data?.data || kanban.value.data.view_type != 'kanban')\n    return []\n  let _columns = kanban.value.data.data\n\n  let has_color = _columns.some((column) => column.column?.color)\n  if (!has_color) {\n    _columns.forEach((column, i) => {\n      column.column['color'] = colors[i % colors.length]\n    })\n  }\n  return _columns\n})\n\nconst deletedColumns = computed(() => {\n  return columns.value\n    .filter((col) => col.column['delete'])\n    .map((col) => {\n      return { label: col.column.name, value: col.column.name }\n    })\n})\n\nfunction actions(column) {\n  return [\n    {\n      group: __('Options'),\n      hideLabel: true,\n      items: [\n        {\n          label: __('Delete'),\n          icon: 'trash-2',\n          onClick: () => {\n            column.column['delete'] = true\n            updateColumn()\n          },\n        },\n      ],\n    },\n  ]\n}\n\nfunction addColumn(e) {\n  let column = columns.value.find((col) => col.column.name == e.value)\n  column.column['delete'] = false\n  updateColumn()\n}\n\nfunction updateColumn(d) {\n  let toColumn = d?.to?.dataset.column\n  let fromColumn = d?.from?.dataset.column\n  let itemName = d?.item?.dataset.name\n\n  let _columns = []\n  columns.value.forEach((col) => {\n    col.column['order'] = col.data.map((d) => d.name)\n    if (col.column.page_length) {\n      delete col.column.page_length\n    }\n    _columns.push(col.column)\n  })\n\n  let data = { kanban_columns: _columns }\n\n  if (toColumn != fromColumn) {\n    data = { item: itemName, to: toColumn, kanban_columns: _columns }\n  }\n\n  emit('update', data)\n}\n</script>\n"],"names":["emit","__emit","kanban","_useModel","__props","titleField","computed","_b","_a","columns","_columns","column","i","colors","deletedColumns","col","actions","updateColumn","addColumn","d","toColumn","fromColumn","itemName","_c","data"],"mappings":"2hDA2LA,MAAMA,EAAOC,EAEPC,EAASC,EAAYC,EAAA,YAAA,EAErBC,EAAaC,EAAS,IAAM,SAChC,OAAOC,GAAAC,EAAAN,EAAO,QAAP,YAAAM,EAAc,OAAd,YAAAD,EAAoB,WAC7B,CAAC,EAEKE,EAAUH,EAAS,IAAM,SAC7B,GAAI,GAACC,GAAAC,EAAAN,EAAO,QAAP,YAAAM,EAAc,OAAd,MAAAD,EAAoB,OAAQL,EAAO,MAAM,KAAK,WAAa,SAC9D,MAAO,CAAC,EACV,IAAIQ,EAAWR,EAAO,MAAM,KAAK,KAGjC,OADgBQ,EAAS,KAAMC,UAAW,OAAAH,EAAAG,EAAO,SAAP,YAAAH,EAAe,MAAK,GAE5DE,EAAS,QAAQ,CAACC,EAAQC,IAAM,CAC9BD,EAAO,OAAO,MAAWE,EAAOD,EAAIC,EAAO,MAAM,CACvD,CAAK,EAEIH,CACT,CAAC,EAEKI,EAAiBR,EAAS,IACvBG,EAAQ,MACZ,OAAQM,GAAQA,EAAI,OAAO,MAAS,EACpC,IAAKA,IACG,CAAE,MAAOA,EAAI,OAAO,KAAM,MAAOA,EAAI,OAAO,IAAK,EACzD,CACJ,EAED,SAASC,EAAQL,EAAQ,CACvB,MAAO,CACL,CACE,MAAO,GAAG,SAAS,EACnB,UAAW,GACX,MAAO,CACL,CACE,MAAO,GAAG,QAAQ,EAClB,KAAM,UACN,QAAS,IAAM,CACbA,EAAO,OAAO,OAAY,GAC1BM,EAAa,CACd,CACF,CACF,CACF,CACH,CACF,CAEA,SAASC,EAAU,EAAG,CACpB,IAAIP,EAASF,EAAQ,MAAM,KAAMM,GAAQA,EAAI,OAAO,MAAQ,EAAE,KAAK,EACnEJ,EAAO,OAAO,OAAY,GAC1BM,EAAa,CACf,CAEA,SAASA,EAAaE,EAAG,WACvB,IAAIC,GAAWZ,EAAAW,GAAA,YAAAA,EAAG,KAAH,YAAAX,EAAO,QAAQ,OAC1Ba,GAAad,EAAAY,GAAA,YAAAA,EAAG,OAAH,YAAAZ,EAAS,QAAQ,OAC9Be,GAAWC,EAAAJ,GAAA,YAAAA,EAAG,OAAH,YAAAI,EAAS,QAAQ,KAE5Bb,EAAW,CAAC,EAChBD,EAAQ,MAAM,QAASM,GAAQ,CAC7BA,EAAI,OAAO,MAAWA,EAAI,KAAK,IAAKI,GAAMA,EAAE,IAAI,EAC5CJ,EAAI,OAAO,aACb,OAAOA,EAAI,OAAO,YAEpBL,EAAS,KAAKK,EAAI,MAAM,CAC5B,CAAG,EAED,IAAIS,EAAO,CAAE,eAAgBd,CAAS,EAElCU,GAAYC,IACdG,EAAO,CAAE,KAAMF,EAAU,GAAIF,EAAU,eAAgBV,CAAS,GAGlEV,EAAK,SAAUwB,CAAI,CACrB"}