{"version":3,"file":"view-de8292bb.js","sources":["../../../../frontend/src/components/Icons/SuccessIcon.vue","../../../../frontend/src/components/DropdownItem.vue","../../../../frontend/src/components/SidePanelLayoutEditor.vue","../../../../frontend/src/components/Modals/SidePanelModal.vue","../../../../frontend/src/components/SidePanelLayout.vue","../../../../frontend/src/utils/view.js"],"sourcesContent":["<template>\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M14 8C14 11.3137 11.3137 14 8 14C4.68629 14 2 11.3137 2 8C2 4.68629 4.68629 2 8 2C11.3137 2 14 4.68629 14 8ZM15 8C15 11.866 11.866 15 8 15C4.13401 15 1 11.866 1 8C1 4.13401 4.13401 1 8 1C11.866 1 15 4.13401 15 8ZM11.2909 5.98482C11.4666 5.77175 11.4363 5.45663 11.2232 5.28096C11.0101 5.1053 10.695 5.13561 10.5193 5.34868L7.07001 9.53239L5.72845 7.79857C5.55946 7.58018 5.24543 7.54012 5.02703 7.70911C4.80863 7.8781 4.76858 8.19214 4.93756 8.41053L6.66217 10.6394C6.7552 10.7596 6.89788 10.831 7.04988 10.8334C7.20188 10.8357 7.3467 10.7688 7.4434 10.6515L11.2909 5.98482Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n</template>\n","<template>\n  <div\n    class=\"group flex w-full items-center justify-between rounded bg-transparent p-1 pl-2 text-base text-ink-gray-8 transition-colors hover:bg-surface-gray-3 active:bg-surface-gray-4\"\n  >\n    <div class=\"flex flex-1 items-center justify-between gap-7\">\n      <div v-show=\"!editMode\">{{ option.value }}</div>\n      <TextInput\n        ref=\"inputRef\"\n        v-show=\"editMode\"\n        v-model=\"option.value\"\n        class=\"w-full\"\n        :placeholder=\"option.placeholder\"\n        @blur.stop=\"saveOption\"\n        @keydown.enter.stop=\"(e) => e.target.blur()\"\n      />\n\n      <div class=\"actions flex items-center justify-center\">\n        <Button\n          v-if=\"editMode\"\n          variant=\"ghost\"\n          :label=\"__('Save')\"\n          size=\"sm\"\n          class=\"opacity-0 hover:bg-surface-gray-4 group-hover:opacity-100\"\n          @click=\"saveOption\"\n        />\n        <Tooltip text=\"Set As Primary\" v-if=\"!isNew && !option.selected\">\n          <div>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              class=\"opacity-0 hover:bg-surface-gray-4 group-hover:opacity-100\"\n              @click=\"option.onClick\"\n            >\n              <SuccessIcon />\n            </Button>\n          </div>\n        </Tooltip>\n        <Tooltip v-if=\"!editMode\" text=\"Edit\">\n          <div>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              class=\"opacity-0 hover:bg-surface-gray-4 group-hover:opacity-100\"\n              @click=\"toggleEditMode\"\n            >\n              <EditIcon />\n            </Button>\n          </div>\n        </Tooltip>\n        <Tooltip text=\"Delete\">\n          <div>\n            <Button\n              variant=\"ghost\"\n              icon=\"x\"\n              size=\"sm\"\n              class=\"opacity-0 hover:bg-surface-gray-4 group-hover:opacity-100\"\n              @click=\"() => option.onDelete(option, isNew)\"\n            />\n          </div>\n        </Tooltip>\n      </div>\n    </div>\n    <div v-if=\"option.selected\">\n      <FeatherIcon name=\"check\" class=\"text-ink-gray-5 h-4 w-6\" size=\"sm\" />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport SuccessIcon from '@/components/Icons/SuccessIcon.vue'\nimport EditIcon from '@/components/Icons/EditIcon.vue'\nimport { TextInput, Tooltip } from 'frappe-ui'\nimport { nextTick, ref, onMounted } from 'vue'\n\nconst props = defineProps({\n  option: {\n    type: Object,\n    default: () => {},\n  },\n})\n\nconst editMode = ref(false)\nconst isNew = ref(false)\nconst inputRef = ref(null)\n\nonMounted(() => {\n  if (!props.option?.value) {\n    editMode.value = true\n    isNew.value = true\n    nextTick(() => inputRef.value.el.focus())\n  }\n})\n\nconst toggleEditMode = () => {\n  editMode.value = !editMode.value\n  editMode.value && nextTick(() => inputRef.value.el.focus())\n}\n\nconst saveOption = (e) => {\n  if (!e.target.value) return\n  toggleEditMode()\n  props.option.onSave(props.option, isNew.value)\n  isNew.value = false\n}\n</script>\n","<template>\n  <div>\n    <Draggable :list=\"sections\" item-key=\"name\" class=\"flex flex-col gap-5.5\">\n      <template #item=\"{ element: section }\">\n        <div class=\"flex flex-col gap-3\">\n          <div\n            class=\"flex items-center justify-between rounded px-2.5 py-2 bg-surface-gray-2\"\n          >\n            <div\n              class=\"flex max-w-fit cursor-pointer items-center gap-2 text-base leading-4 text-ink-gray-9\"\n              @click=\"section.opened = !section.opened\"\n            >\n              <FeatherIcon\n                name=\"chevron-right\"\n                class=\"h-4 transition-all duration-300 ease-in-out\"\n                :class=\"{ 'rotate-90': section.opened }\"\n              />\n              <div v-if=\"!section.editingLabel\">\n                {{ __(section.label) || __('Untitled') }}\n              </div>\n              <div v-else class=\"flex gap-2 items-center\">\n                <Input\n                  v-model=\"section.label\"\n                  @keydown.enter=\"section.editingLabel = false\"\n                  @blur=\"section.editingLabel = false\"\n                  @click.stop\n                />\n                <Button\n                  v-if=\"section.editingLabel\"\n                  icon=\"check\"\n                  class=\"!size-4 rounded-sm\"\n                  variant=\"ghost\"\n                  @click.stop=\"section.editingLabel = false\"\n                />\n              </div>\n            </div>\n            <div class=\"flex gap-1 items-center\">\n              <Button\n                v-if=\"!section.editingLabel\"\n                class=\"!size-4 rounded-sm\"\n                variant=\"ghost\"\n                @click=\"section.editingLabel = true\"\n              >\n                <EditIcon class=\"h-3.5\" />\n              </Button>\n              <Button\n                v-if=\"section.editable !== false\"\n                class=\"!size-4 rounded-sm\"\n                icon=\"x\"\n                variant=\"ghost\"\n                @click=\"sections.splice(sections.indexOf(section), 1)\"\n              />\n            </div>\n          </div>\n          <div v-show=\"section.opened\">\n            <Draggable\n              :list=\"section.columns?.[0].fields || []\"\n              group=\"fields\"\n              item-key=\"fieldname\"\n              class=\"flex flex-col gap-1.5\"\n              handle=\".cursor-grab\"\n            >\n              <template #item=\"{ element: field }\">\n                <div\n                  class=\"px-2.5 py-2 border border-outline-gray-modals rounded text-base leading-4 text-ink-gray-8 flex items-center justify-between gap-2\"\n                >\n                  <div class=\"flex items-center gap-2\">\n                    <DragVerticalIcon class=\"h-3.5 cursor-grab\" />\n                    <div>{{ field.label }}</div>\n                  </div>\n                  <Button\n                    variant=\"ghost\"\n                    icon=\"x\"\n                    class=\"!size-4 rounded-sm\"\n                    @click=\"\n                      section.columns[0].fields.splice(\n                        section.columns[0].fields.indexOf(field),\n                        1,\n                      )\n                    \"\n                  />\n                </div>\n              </template>\n            </Draggable>\n            <Autocomplete\n              v-if=\"fields.data && section.editable !== false\"\n              value=\"\"\n              :options=\"fields.data\"\n              @change=\"(e) => addField(section, e)\"\n            >\n              <template #target=\"{ togglePopover }\">\n                <Button\n                  class=\"w-full h-8 mt-1.5 !bg-surface-gray-1\"\n                  variant=\"outline\"\n                  @click=\"togglePopover()\"\n                  :label=\"__('Add Field')\"\n                >\n                  <template #prefix>\n                    <FeatherIcon name=\"plus\" class=\"h-4\" />\n                  </template>\n                </Button>\n              </template>\n              <template #item-label=\"{ option }\">\n                <div class=\"flex flex-col gap-1 text-ink-gray-9\">\n                  <div>{{ option.label }}</div>\n                  <div class=\"text-ink-gray-4 text-sm\">\n                    {{ `${option.fieldname} - ${option.fieldtype}` }}\n                  </div>\n                </div>\n              </template>\n            </Autocomplete>\n            <div\n              v-else\n              class=\"flex justify-center items-center border rounded border-dashed border-outline-gray-modals p-3\"\n            >\n              <div class=\"text-sm text-ink-gray-4\">\n                {{ __('This section is not editable') }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </template>\n    </Draggable>\n    <div class=\"mt-5.5\">\n      <Button\n        class=\"w-full h-8\"\n        variant=\"subtle\"\n        :label=\"__('Add Section')\"\n        @click=\"\n          sections.push({\n            label: __('New Section'),\n            opened: true,\n            name: 'section_' + getRandom(),\n            columns: [{ name: 'column_' + getRandom(), fields: [] }],\n          })\n        \"\n      >\n        <template #prefix>\n          <FeatherIcon name=\"plus\" class=\"h-4\" />\n        </template>\n      </Button>\n    </div>\n  </div>\n</template>\n<script setup>\nimport EditIcon from '@/components/Icons/EditIcon.vue'\nimport Autocomplete from '@/components/frappe-ui/Autocomplete.vue'\nimport DragVerticalIcon from '@/components/Icons/DragVerticalIcon.vue'\nimport { getRandom } from '@/utils'\nimport Draggable from 'vuedraggable'\nimport { Input, createResource } from 'frappe-ui'\nimport { computed, watch } from 'vue'\n\nconst props = defineProps({\n  sections: Object,\n  doctype: String,\n})\n\nconst restrictedFieldTypes = [\n  'Table',\n  'Table MultiSelect',\n  'Geolocation',\n  'Attach',\n  'Attach Image',\n  'HTML',\n  'Signature',\n]\n\nconst params = computed(() => {\n  return {\n    doctype: props.doctype,\n    restricted_fieldtypes: restrictedFieldTypes,\n    as_array: true,\n  }\n})\n\nconst fields = createResource({\n  url: 'crm.api.doc.get_fields_meta',\n  params: params.value,\n  cache: ['fieldsMeta', props.doctype],\n  auto: true,\n})\n\nfunction addField(section, field) {\n  if (!field) return\n  section.columns[0].fields.push(field)\n}\n\nwatch(\n  () => props.doctype,\n  () => fields.fetch(params.value),\n  { immediate: true },\n)\n</script>\n","<template>\n  <Dialog v-model=\"show\" :options=\"{ size: '3xl' }\">\n    <template #body-title>\n      <h3\n        class=\"flex items-center gap-2 text-2xl font-semibold leading-6 text-ink-gray-9\"\n      >\n        <div>{{ __('Edit Field Layout') }}</div>\n        <Badge\n          v-if=\"dirty\"\n          :label=\"__('Not Saved')\"\n          variant=\"subtle\"\n          theme=\"orange\"\n        />\n      </h3>\n    </template>\n    <template #body-content>\n      <div class=\"flex flex-col gap-5.5\">\n        <div class=\"flex justify-between gap-2\">\n          <Button\n            :label=\"preview ? __('Hide preview') : __('Show preview')\"\n            @click=\"preview = !preview\"\n          />\n          <div class=\"flex flex-row-reverse gap-2\">\n            <Button\n              :loading=\"loading\"\n              :label=\"__('Save')\"\n              variant=\"solid\"\n              @click=\"saveChanges\"\n            />\n            <Button :label=\"__('Reset')\" @click=\"reload\" />\n          </div>\n        </div>\n        <div v-if=\"tabs.data?.[0]?.sections\" class=\"flex gap-4\">\n          <SidePanelLayoutEditor\n            class=\"flex flex-1 flex-col pr-2\"\n            :sections=\"tabs.data[0].sections\"\n            :doctype=\"_doctype\"\n          />\n          <div v-if=\"preview\" class=\"flex flex-1 flex-col border rounded\">\n            <SidePanelLayout\n              :sections=\"tabs.data[0].sections\"\n              :doctype=\"_doctype\"\n              docname=\"\"\n              :preview=\"true\"\n              v-slot=\"{ section }\"\n            >\n              <div\n                v-if=\"section.name == 'contacts_section'\"\n                class=\"flex h-16 items-center justify-center text-base text-ink-gray-5\"\n              >\n                {{ __('No contacts added') }}\n              </div>\n            </SidePanelLayout>\n          </div>\n          <div\n            v-else\n            class=\"flex flex-1 justify-center items-center text-ink-gray-5 bg-surface-gray-2 rounded\"\n          >\n            {{ __('Toggle on for preview') }}\n          </div>\n        </div>\n      </div>\n    </template>\n  </Dialog>\n</template>\n<script setup>\nimport SidePanelLayout from '@/components/SidePanelLayout.vue'\nimport SidePanelLayoutEditor from '@/components/SidePanelLayoutEditor.vue'\nimport { useDebounceFn } from '@vueuse/core'\nimport { capture } from '@/telemetry'\nimport { Dialog, Badge, call, createResource } from 'frappe-ui'\nimport { ref, watch, onMounted, nextTick } from 'vue'\n\nconst props = defineProps({\n  doctype: {\n    type: String,\n    default: 'CRM Lead',\n  },\n})\n\nconst emit = defineEmits(['reload'])\n\nconst show = defineModel()\nconst _doctype = ref(props.doctype)\nconst loading = ref(false)\nconst dirty = ref(false)\nconst preview = ref(false)\nconst data = ref({})\n\nfunction getParams() {\n  return { doctype: _doctype.value, type: 'Side Panel' }\n}\n\nconst tabs = createResource({\n  url: 'crm.fcrm.doctype.crm_fields_layout.crm_fields_layout.get_fields_layout',\n  cache: ['SidePanel', _doctype.value],\n  params: getParams(),\n  onSuccess(data) {\n    tabs.originalData = JSON.parse(JSON.stringify(data))\n  },\n})\n\nwatch(\n  () => tabs?.data,\n  () => {\n    dirty.value =\n      JSON.stringify(tabs?.data) !== JSON.stringify(tabs?.originalData)\n  },\n  { deep: true },\n)\n\nonMounted(() => useDebounceFn(reload, 100)())\n\nfunction reload() {\n  nextTick(() => {\n    tabs.params = getParams()\n    tabs.reload()\n  })\n}\n\nfunction saveChanges() {\n  let _tabs = JSON.parse(JSON.stringify(tabs.data))\n  _tabs.forEach((tab) => {\n    tab.sections.forEach((section) => {\n      if (!section.columns) return\n      section.columns.forEach((column) => {\n        if (!column.fields) return\n        column.fields = column.fields\n          .map((field) => field.fieldname)\n          .filter(Boolean)\n      })\n    })\n  })\n  loading.value = true\n  call(\n    'crm.fcrm.doctype.crm_fields_layout.crm_fields_layout.save_fields_layout',\n    {\n      doctype: _doctype.value,\n      type: 'Side Panel',\n      layout: JSON.stringify(_tabs[0].sections),\n    },\n  ).then(() => {\n    loading.value = false\n    show.value = false\n    capture('side_panel_layout_builder', { doctype: _doctype.value })\n    emit('reload')\n  })\n}\n</script>\n","<template>\n  <div\n    v-if=\"!document.get?.loading\"\n    class=\"sections flex flex-col overflow-y-auto\"\n  >\n    <template v-for=\"(section, i) in _sections\" :key=\"section.name\">\n      <div v-if=\"section.visible\" class=\"section flex flex-col\">\n        <div\n          v-if=\"i !== firstVisibleIndex()\"\n          class=\"w-full section-border h-px border-t\"\n        />\n        <div class=\"p-1 sm:p-3\">\n          <Section\n            labelClass=\"px-2 font-semibold\"\n            headerClass=\"h-8\"\n            :label=\"section.label\"\n            :hideLabel=\"!section.label\"\n            :opened=\"section.opened\"\n          >\n            <template v-if=\"!preview\" #actions>\n              <slot name=\"actions\" v-bind=\"{ section }\">\n                <Button\n                  v-if=\"section.showEditButton\"\n                  variant=\"ghost\"\n                  class=\"w-7 mr-2\"\n                  @click=\"showSidePanelModal = true\"\n                >\n                  <EditIcon class=\"h-4 w-4\" />\n                </Button>\n              </slot>\n            </template>\n            <slot v-bind=\"{ section }\">\n              <FadedScrollableDiv\n                v-if=\"section.columns?.[0].fields.length\"\n                class=\"column flex flex-col gap-1.5 overflow-y-auto\"\n              >\n                <template\n                  v-for=\"field in section.columns[0].fields || []\"\n                  :key=\"field.fieldname\"\n                >\n                  <div\n                    v-if=\"field.visible\"\n                    class=\"field flex items-center gap-2 px-3 leading-5 first:mt-3\"\n                  >\n                    <Tooltip :text=\"__(field.label)\" :hoverDelay=\"1\">\n                      <div\n                        class=\"w-[35%] min-w-20 shrink-0 truncate text-sm text-ink-gray-5\"\n                      >\n                        {{ __(field.label) }}\n                        <span\n                          v-if=\"\n                            field.reqd ||\n                            (field.mandatory_depends_on &&\n                              field.mandatory_via_depends_on)\n                          \"\n                          class=\"text-ink-red-2\"\n                          >*</span\n                        >\n                      </div>\n                    </Tooltip>\n                    <div class=\"flex items-center justify-between w-[65%]\">\n                      <div\n                        class=\"grid min-h-[28px] flex-1 items-center overflow-hidden text-base\"\n                      >\n                        <div\n                          v-if=\"\n                            field.read_only &&\n                            ![\n                              'Int',\n                              'Float',\n                              'Currency',\n                              'Percent',\n                              'Check',\n                              'Dropdown',\n                            ].includes(field.fieldtype)\n                          \"\n                          class=\"flex h-7 cursor-pointer items-center px-2 py-1 text-ink-gray-5\"\n                        >\n                          <Tooltip :text=\"__(field.tooltip)\">\n                            <div>{{ document.doc[field.fieldname] }}</div>\n                          </Tooltip>\n                        </div>\n                        <div v-else-if=\"field.fieldtype === 'Dropdown'\">\n                          <NestedPopover>\n                            <template #target=\"{ open }\">\n                              <Button\n                                :label=\"document.doc[field.fieldname]\"\n                                class=\"dropdown-button flex w-full items-center justify-between rounded border border-gray-100 bg-surface-gray-2 px-2 py-1.5 text-base text-ink-gray-8 placeholder-ink-gray-4 transition-colors hover:border-outline-gray-modals hover:bg-surface-gray-3 focus:border-outline-gray-4 focus:bg-surface-white focus:shadow-sm focus:outline-none focus:ring-0 focus-visible:ring-2 focus-visible:ring-outline-gray-3\"\n                              >\n                                <div\n                                  v-if=\"document.doc[field.fieldname]\"\n                                  class=\"truncate\"\n                                >\n                                  {{ document.doc[field.fieldname] }}\n                                </div>\n                                <div\n                                  v-else\n                                  class=\"text-base leading-5 text-ink-gray-4 truncate\"\n                                >\n                                  {{ field.placeholder }}\n                                </div>\n                                <template #suffix>\n                                  <FeatherIcon\n                                    :name=\"open ? 'chevron-up' : 'chevron-down'\"\n                                    class=\"h-4 text-ink-gray-5\"\n                                  />\n                                </template>\n                              </Button>\n                            </template>\n                            <template #body>\n                              <div\n                                class=\"my-2 p-1.5 min-w-40 space-y-1.5 divide-y divide-outline-gray-1 rounded-lg bg-surface-modal shadow-2xl ring-1 ring-black ring-opacity-5 focus:outline-none\"\n                              >\n                                <div>\n                                  <DropdownItem\n                                    v-if=\"field.options?.length\"\n                                    v-for=\"option in field.options\"\n                                    :key=\"option.name\"\n                                    :option=\"option\"\n                                  />\n                                  <div v-else>\n                                    <div\n                                      class=\"p-1.5 px-7 text-base text-ink-gray-4\"\n                                    >\n                                      {{\n                                        __('No {0} Available', [field.label])\n                                      }}\n                                    </div>\n                                  </div>\n                                </div>\n                                <div class=\"pt-1.5\">\n                                  <Button\n                                    variant=\"ghost\"\n                                    class=\"w-full !justify-start\"\n                                    :label=\"__('Create New')\"\n                                    @click=\"field.create()\"\n                                  >\n                                    <template #prefix>\n                                      <FeatherIcon name=\"plus\" class=\"h-4\" />\n                                    </template>\n                                  </Button>\n                                </div>\n                              </div>\n                            </template>\n                          </NestedPopover>\n                        </div>\n                        <FormControl\n                          v-else-if=\"field.fieldtype == 'Check'\"\n                          class=\"form-control\"\n                          type=\"checkbox\"\n                          v-model=\"document.doc[field.fieldname]\"\n                          @change.stop=\"\n                            fieldChange($event.target.checked, field)\n                          \"\n                          :disabled=\"Boolean(field.read_only)\"\n                        />\n                        <FormControl\n                          v-else-if=\"\n                            [\n                              'Small Text',\n                              'Text',\n                              'Long Text',\n                              'Code',\n                            ].includes(field.fieldtype)\n                          \"\n                          class=\"form-control\"\n                          type=\"textarea\"\n                          :value=\"document.doc[field.fieldname]\"\n                          :placeholder=\"field.placeholder\"\n                          :debounce=\"500\"\n                          @change.stop=\"fieldChange($event.target.value, field)\"\n                        />\n                        <FormControl\n                          v-else-if=\"field.fieldtype === 'Select'\"\n                          class=\"form-control cursor-pointer [&_select]:cursor-pointer truncate\"\n                          type=\"select\"\n                          v-model=\"document.doc[field.fieldname]\"\n                          :options=\"field.options\"\n                          :placeholder=\"field.placeholder\"\n                          @change.stop=\"fieldChange($event.target.value, field)\"\n                        />\n                        <Link\n                          v-else-if=\"field.fieldtype === 'User'\"\n                          class=\"form-control\"\n                          :value=\"\n                            document.doc[field.fieldname] &&\n                            getUser(document.doc[field.fieldname]).full_name\n                          \"\n                          doctype=\"User\"\n                          :filters=\"field.filters\"\n                          @change=\"(v) => fieldChange(v, field)\"\n                          :placeholder=\"'Select' + ' ' + field.label + '...'\"\n                          :hideMe=\"true\"\n                        >\n                          <template\n                            v-if=\"document.doc[field.fieldname]\"\n                            #prefix\n                          >\n                            <UserAvatar\n                              class=\"mr-1.5\"\n                              :user=\"document.doc[field.fieldname]\"\n                              size=\"sm\"\n                            />\n                          </template>\n                          <template #item-prefix=\"{ option }\">\n                            <UserAvatar\n                              class=\"mr-1.5\"\n                              :user=\"option.value\"\n                              size=\"sm\"\n                            />\n                          </template>\n                          <template #item-label=\"{ option }\">\n                            <Tooltip :text=\"option.value\">\n                              <div class=\"cursor-pointer\">\n                                {{ getUser(option.value).full_name }}\n                              </div>\n                            </Tooltip>\n                          </template>\n                        </Link>\n                        <Link\n                          v-else-if=\"\n                            ['Link', 'Dynamic Link'].includes(field.fieldtype)\n                          \"\n                          class=\"form-control select-text\"\n                          :value=\"document.doc[field.fieldname]\"\n                          :doctype=\"\n                            field.fieldtype == 'Link'\n                              ? field.options\n                              : document.doc[field.options]\n                          \"\n                          :filters=\"field.filters\"\n                          :placeholder=\"field.placeholder\"\n                          @change=\"(v) => fieldChange(v, field)\"\n                          :onCreate=\"field.create\"\n                        />\n                        <div\n                          v-else-if=\"field.fieldtype === 'Datetime'\"\n                          class=\"form-control\"\n                        >\n                          <DateTimePicker\n                            icon-left=\"\"\n                            :value=\"document.doc[field.fieldname]\"\n                            :formatter=\"\n                              (date) => getFormat(date, '', true, true)\n                            \"\n                            :placeholder=\"field.placeholder\"\n                            placement=\"left-start\"\n                            @change=\"(v) => fieldChange(v, field)\"\n                          />\n                        </div>\n                        <div\n                          v-else-if=\"field.fieldtype === 'Date'\"\n                          class=\"form-control\"\n                        >\n                          <DatePicker\n                            icon-left=\"\"\n                            :value=\"document.doc[field.fieldname]\"\n                            :formatter=\"(date) => getFormat(date, '', true)\"\n                            :placeholder=\"field.placeholder\"\n                            placement=\"left-start\"\n                            @change=\"(v) => fieldChange(v, field)\"\n                          />\n                        </div>\n                        <FormattedInput\n                          v-else-if=\"field.fieldtype === 'Percent'\"\n                          class=\"form-control\"\n                          type=\"text\"\n                          :value=\"\n                            getFormattedPercent(field.fieldname, document.doc)\n                          \"\n                          :placeholder=\"field.placeholder\"\n                          :debounce=\"500\"\n                          @change.stop=\"\n                            fieldChange(flt($event.target.value), field)\n                          \"\n                          :disabled=\"Boolean(field.read_only)\"\n                        />\n                        <Password\n                          v-else-if=\"field.fieldtype === 'Password'\"\n                          class=\"form-control\"\n                          :value=\"document.doc[field.fieldname]\"\n                          :placeholder=\"field.placeholder\"\n                          :debounce=\"500\"\n                          @change.stop=\"fieldChange($event.target.value, field)\"\n                          :disabled=\"Boolean(field.read_only)\"\n                        />\n                        <FormattedInput\n                          v-else-if=\"field.fieldtype === 'Int'\"\n                          class=\"form-control\"\n                          type=\"text\"\n                          :value=\"document.doc[field.fieldname] || '0'\"\n                          :placeholder=\"field.placeholder\"\n                          :debounce=\"500\"\n                          @change.stop=\"fieldChange($event.target.value, field)\"\n                          :disabled=\"Boolean(field.read_only)\"\n                        />\n                        <FormattedInput\n                          v-else-if=\"field.fieldtype === 'Float'\"\n                          class=\"form-control\"\n                          type=\"text\"\n                          :value=\"\n                            getFormattedFloat(field.fieldname, document.doc)\n                          \"\n                          :placeholder=\"field.placeholder\"\n                          :debounce=\"500\"\n                          @change.stop=\"\n                            fieldChange(flt($event.target.value), field)\n                          \"\n                          :disabled=\"Boolean(field.read_only)\"\n                        />\n                        <FormattedInput\n                          v-else-if=\"field.fieldtype === 'Currency'\"\n                          class=\"form-control\"\n                          type=\"text\"\n                          :value=\"\n                            getFormattedCurrency(field.fieldname, document.doc)\n                          \"\n                          :placeholder=\"field.placeholder\"\n                          :debounce=\"500\"\n                          @change.stop=\"\n                            fieldChange(flt($event.target.value), field)\n                          \"\n                          :disabled=\"Boolean(field.read_only)\"\n                        />\n                        <FormControl\n                          v-else\n                          class=\"form-control\"\n                          type=\"text\"\n                          :value=\"document.doc[field.fieldname]\"\n                          :placeholder=\"field.placeholder\"\n                          :debounce=\"500\"\n                          @change.stop=\"fieldChange($event.target.value, field)\"\n                        />\n                      </div>\n                      <div class=\"ml-1\">\n                        <ArrowUpRightIcon\n                          v-if=\"\n                            field.fieldtype === 'Link' &&\n                            field.link &&\n                            document.doc[field.fieldname]\n                          \"\n                          class=\"h-4 w-4 shrink-0 cursor-pointer text-ink-gray-5 hover:text-ink-gray-8\"\n                          @click.stop=\"\n                            field.link(document.doc[field.fieldname])\n                          \"\n                        />\n                        <EditIcon\n                          v-if=\"\n                            field.fieldtype === 'Link' &&\n                            field.edit &&\n                            document.doc[field.fieldname]\n                          \"\n                          class=\"size-3.5 shrink-0 cursor-pointer text-ink-gray-5 hover:text-ink-gray-8\"\n                          @click.stop=\"\n                            field.edit(document.doc[field.fieldname])\n                          \"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </template>\n              </FadedScrollableDiv>\n            </slot>\n          </Section>\n        </div>\n      </div>\n    </template>\n  </div>\n  <SidePanelModal\n    v-if=\"showSidePanelModal\"\n    v-model=\"showSidePanelModal\"\n    :doctype=\"doctype\"\n    @reload=\"() => emit('reload')\"\n  />\n</template>\n\n<script setup>\nimport Password from '@/components/Controls/Password.vue'\nimport FormattedInput from '@/components/Controls/FormattedInput.vue'\nimport Section from '@/components/Section.vue'\nimport NestedPopover from '@/components/NestedPopover.vue'\nimport DropdownItem from '@/components/DropdownItem.vue'\nimport FadedScrollableDiv from '@/components/FadedScrollableDiv.vue'\nimport ArrowUpRightIcon from '@/components/Icons/ArrowUpRightIcon.vue'\nimport EditIcon from '@/components/Icons/EditIcon.vue'\nimport Link from '@/components/Controls/Link.vue'\nimport UserAvatar from '@/components/UserAvatar.vue'\nimport SidePanelModal from '@/components/Modals/SidePanelModal.vue'\nimport { getMeta } from '@/stores/meta'\nimport { usersStore } from '@/stores/users'\nimport { isMobileView } from '@/composables/settings'\nimport { getFormat, evaluateDependsOnValue } from '@/utils'\nimport { flt } from '@/utils/numberFormat.js'\nimport { Tooltip, DateTimePicker, DatePicker } from 'frappe-ui'\nimport { useDocument } from '@/data/document'\nimport { ref, computed } from 'vue'\n\nconst props = defineProps({\n  sections: {\n    type: Object,\n  },\n  doctype: {\n    type: String,\n    default: 'CRM Lead',\n    required: true,\n  },\n  docname: {\n    type: String,\n    required: true,\n  },\n  preview: {\n    type: Boolean,\n    default: false,\n  },\n  addContact: {\n    type: Function,\n  },\n})\n\nconst { getFormattedPercent, getFormattedFloat, getFormattedCurrency } =\n  getMeta(props.doctype)\n\nconst { isManager, getUser } = usersStore()\n\nconst emit = defineEmits(['reload'])\n\nconst showSidePanelModal = ref(false)\n\nlet document = { doc: {} }\nlet triggerOnChange\n\nif (props.docname) {\n  let d = useDocument(props.doctype, props.docname)\n  document = d.document\n  triggerOnChange = d.triggerOnChange\n}\n\nconst _sections = computed(() => {\n  if (!props.sections?.length) return []\n  let editButtonAdded = false\n  return props.sections.map((section) => {\n    if (section.columns?.length) {\n      section.columns[0].fields = section.columns[0].fields.map((field) => {\n        return parsedField(field)\n      })\n    }\n    let _section = parsedSection(section, editButtonAdded)\n    if (_section.showEditButton) {\n      editButtonAdded = true\n    }\n    return _section\n  })\n})\n\nfunction parsedField(field) {\n  if (field.fieldtype == 'Select' && typeof field.options === 'string') {\n    field.options = field.options.split('\\n').map((option) => {\n      return { label: option, value: option }\n    })\n\n    if (field.options[0].value !== '') {\n      field.options.unshift({ label: '', value: '' })\n    }\n  }\n\n  if (field.fieldtype === 'Link' && field.options === 'User') {\n    field.options = field.options\n    field.fieldtype = 'User'\n  }\n\n  let _field = {\n    ...field,\n    filters: field.link_filters && JSON.parse(field.link_filters),\n    placeholder: field.placeholder || field.label,\n    display_via_depends_on: evaluateDependsOnValue(\n      field.depends_on,\n      document.doc,\n    ),\n    mandatory_via_depends_on: evaluateDependsOnValue(\n      field.mandatory_depends_on,\n      document.doc,\n    ),\n  }\n\n  _field.visible = isFieldVisible(_field)\n  return _field\n}\n\nasync function fieldChange(value, df) {\n  if (props.preview) return\n\n  document.doc[df.fieldname] = value\n\n  await triggerOnChange(df.fieldname)\n\n  document.save.submit()\n}\n\nfunction parsedSection(section, editButtonAdded) {\n  let isContactSection = section.name == 'contacts_section'\n  section.showEditButton = !(\n    isMobileView.value ||\n    !isManager() ||\n    isContactSection ||\n    editButtonAdded\n  )\n\n  section.visible =\n    isContactSection ||\n    section.columns?.[0].fields.filter((f) => f.visible).length\n\n  return section\n}\n\nfunction isFieldVisible(field) {\n  if (props.preview) return true\n  return (\n    (field.fieldtype == 'Check' ||\n      (field.read_only && document.doc?.[field.fieldname]) ||\n      !field.read_only) &&\n    (!field.depends_on || field.display_via_depends_on) &&\n    !field.hidden\n  )\n}\n\nfunction firstVisibleIndex() {\n  return _sections.value.findIndex((section) => section.visible)\n}\n</script>\n\n<style scoped>\n.form-control {\n  margin: 2px;\n}\n\n:deep(.form-control input:not([type='checkbox'])),\n:deep(.form-control select),\n:deep(.form-control textarea),\n:deep(.form-control button),\n.dropdown-button {\n  border-color: transparent;\n  background: transparent;\n}\n\n:deep(.form-control button) {\n  gap: 0;\n}\n:deep(.form-control [type='checkbox']) {\n  margin-left: 9px;\n  cursor: pointer;\n}\n\n:deep(.form-control button > div) {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n:deep(.form-control button svg) {\n  color: white;\n  width: 0;\n}\n\n.sections .section .column {\n  max-height: 300px;\n}\n.sections .section:last-of-type .column {\n  max-height: none;\n}\n</style>\n","import ListIcon from '@/components/Icons/ListIcon.vue'\nimport GroupByIcon from '@/components/Icons/GroupByIcon.vue'\nimport KanbanIcon from '@/components/Icons/KanbanIcon.vue'\nimport { viewsStore } from '@/stores/views'\nimport { markRaw } from 'vue'\n\nconst { getView: getViewDetails } = viewsStore()\n\nfunction standardView(type) {\n  let types = {\n    list: {\n      label: __('List'),\n      icon: markRaw(ListIcon),\n    },\n    group_by: {\n      label: __('Group By'),\n      icon: markRaw(GroupByIcon),\n    },\n    kanban: {\n      label: __('Kanban'),\n      icon: markRaw(KanbanIcon),\n    },\n  }\n\n  return types[type]\n}\n\nexport function getView(view, type, doctype) {\n  let viewType = type || 'list'\n  let viewDetails = getViewDetails(view, viewType, doctype)\n  if (viewDetails && !viewDetails.icon) {\n    viewDetails.icon = standardView(viewType).icon\n  }\n  return viewDetails || standardView(viewType)\n}\n"],"names":["_hoisted_1","_sfc_render","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","props","__props","editMode","ref","isNew","inputRef","onMounted","_a","nextTick","toggleEditMode","saveOption","e","restrictedFieldTypes","params","computed","fields","createResource","addField","section","field","watch","emit","__emit","show","_useModel","_doctype","loading","dirty","preview","getParams","tabs","data","useDebounceFn","reload","saveChanges","_tabs","tab","column","call","capture","getFormattedPercent","getFormattedFloat","getFormattedCurrency","getMeta","isManager","getUser","usersStore","showSidePanelModal","document","triggerOnChange","d","useDocument","_sections","editButtonAdded","parsedField","_section","parsedSection","option","_field","evaluateDependsOnValue","isFieldVisible","fieldChange","value","df","isContactSection","isMobileView","f","firstVisibleIndex","getViewDetails","viewsStore","standardView","type","markRaw","ListIcon","GroupByIcon","KanbanIcon","getView","view","doctype","viewType","viewDetails"],"mappings":"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"}