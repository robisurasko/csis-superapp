{"version":3,"file":"CallLogs-f8e06f1a.js","sources":["../../../../frontend/src/components/ListViews/CallLogsListView.vue","../../../../frontend/src/pages/CallLogs.vue"],"sourcesContent":["<template>\n  <ListView\n    :columns=\"columns\"\n    :rows=\"rows\"\n    :options=\"{\n      onRowClick: (row) => emit('showCallLog', row.name),\n      selectable: options.selectable,\n      showTooltip: options.showTooltip,\n      resizeColumn: options.resizeColumn,\n    }\"\n    row-key=\"name\"\n    v-bind=\"$attrs\"\n    @update:selections=\"(selections) => emit('selectionsChanged', selections)\"\n  >\n    <ListHeader\n      class=\"sm:mx-5 mx-3\"\n      @columnWidthUpdated=\"emit('columnWidthUpdated')\"\n    >\n      <ListHeaderItem\n        v-for=\"column in columns\"\n        :key=\"column.key\"\n        :item=\"column\"\n        @columnWidthUpdated=\"emit('columnWidthUpdated', column)\"\n      >\n        <Button\n          v-if=\"column.key == '_liked_by'\"\n          variant=\"ghosted\"\n          class=\"!h-4\"\n          :class=\"isLikeFilterApplied ? 'fill-red-500' : 'fill-white'\"\n          @click=\"() => emit('applyLikeFilter')\"\n        >\n          <HeartIcon class=\"h-4 w-4\" />\n        </Button>\n      </ListHeaderItem>\n    </ListHeader>\n    <ListRows\n      class=\"mx-3 sm:mx-5\"\n      :rows=\"rows\"\n      v-slot=\"{ idx, column, item }\"\n      doctype=\"CRM Call Log\"\n    >\n      <ListRowItem :item=\"item\" :align=\"column.align\">\n        <template #prefix>\n          <div v-if=\"['caller', 'receiver'].includes(column.key)\">\n            <Avatar\n              v-if=\"item.label\"\n              class=\"flex items-center\"\n              :image=\"item.image\"\n              :label=\"item.label\"\n              size=\"sm\"\n            />\n          </div>\n          <div v-else-if=\"['type', 'duration'].includes(column.key)\">\n            <FeatherIcon :name=\"item.icon\" class=\"h-3 w-3\" />\n          </div>\n        </template>\n        <template #default=\"{ label }\">\n          <div\n            v-if=\"['modified', 'creation'].includes(column.key)\"\n            class=\"truncate text-base\"\n            @click=\"\n              (event) =>\n                emit('applyFilter', {\n                  event,\n                  idx,\n                  column,\n                  item,\n                  firstColumn: columns[0],\n                })\n            \"\n          >\n            <Tooltip :text=\"item.label\">\n              <div>{{ item.timeAgo }}</div>\n            </Tooltip>\n          </div>\n          <div v-else-if=\"column.key === 'status'\" class=\"truncate text-base\">\n            <Badge\n              :variant=\"'subtle'\"\n              :theme=\"item.color\"\n              size=\"md\"\n              :label=\"__(item.label)\"\n              @click=\"\n                (event) =>\n                  emit('applyFilter', {\n                    event,\n                    idx,\n                    column,\n                    item,\n                    firstColumn: columns[0],\n                  })\n              \"\n            />\n          </div>\n          <div v-else-if=\"column.type === 'Check'\">\n            <FormControl\n              type=\"checkbox\"\n              :modelValue=\"item\"\n              :disabled=\"true\"\n              class=\"text-ink-gray-9\"\n            />\n          </div>\n          <div v-else-if=\"column.key === '_liked_by'\">\n            <Button\n              v-if=\"column.key == '_liked_by'\"\n              variant=\"ghosted\"\n              :class=\"isLiked(item) ? 'fill-red-500' : 'fill-white'\"\n              @click.stop.prevent=\"\n                () => emit('likeDoc', { name: row.name, liked: isLiked(item) })\n              \"\n            >\n              <HeartIcon class=\"h-4 w-4\" />\n            </Button>\n          </div>\n          <div\n            v-else\n            class=\"truncate text-base\"\n            @click=\"\n              (event) =>\n                emit('applyFilter', {\n                  event,\n                  idx,\n                  column,\n                  item,\n                  firstColumn: columns[0],\n                })\n            \"\n          >\n            {{ label }}\n          </div>\n        </template>\n      </ListRowItem>\n    </ListRows>\n    <ListSelectBanner>\n      <template #actions=\"{ selections, unselectAll }\">\n        <Dropdown\n          :options=\"listBulkActionsRef.bulkActions(selections, unselectAll)\"\n        >\n          <Button icon=\"more-horizontal\" variant=\"ghost\" />\n        </Dropdown>\n      </template>\n    </ListSelectBanner>\n  </ListView>\n  <ListFooter\n    class=\"border-t sm:px-5 px-3 py-2\"\n    v-model=\"pageLengthCount\"\n    :options=\"{\n      rowCount: options.rowCount,\n      totalCount: options.totalCount,\n    }\"\n    @loadMore=\"emit('loadMore')\"\n  />\n  <ListBulkActions\n    ref=\"listBulkActionsRef\"\n    v-model=\"list\"\n    doctype=\"CRM Call Log\"\n    :options=\"{\n      hideEdit: true,\n      hideAssign: true,\n    }\"\n  />\n</template>\n<script setup>\nimport HeartIcon from '@/components/Icons/HeartIcon.vue'\nimport ListBulkActions from '@/components/ListBulkActions.vue'\nimport ListRows from '@/components/ListViews/ListRows.vue'\nimport {\n  Avatar,\n  ListView,\n  ListHeader,\n  ListHeaderItem,\n  ListSelectBanner,\n  ListRowItem,\n  ListFooter,\n  Tooltip,\n  Dropdown,\n} from 'frappe-ui'\nimport { sessionStore } from '@/stores/session'\nimport { ref, computed, watch } from 'vue'\n\nconst props = defineProps({\n  rows: {\n    type: Array,\n    required: true,\n  },\n  columns: {\n    type: Array,\n    required: true,\n  },\n  options: {\n    type: Object,\n    default: () => ({\n      selectable: true,\n      showTooltip: true,\n      resizeColumn: false,\n      totalCount: 0,\n      rowCount: 0,\n    }),\n  },\n})\n\nconst emit = defineEmits([\n  'showCallLog',\n  'loadMore',\n  'updatePageCount',\n  'columnWidthUpdated',\n  'applyFilter',\n  'applyLikeFilter',\n  'likeDoc',\n  'selectionsChanged',\n])\n\nconst pageLengthCount = defineModel()\nconst list = defineModel('list')\n\nconst isLikeFilterApplied = computed(() => {\n  return list.value.params?.filters?._liked_by ? true : false\n})\n\nconst { user } = sessionStore()\n\nfunction isLiked(item) {\n  if (item) {\n    let likedByMe = JSON.parse(item)\n    return likedByMe.includes(user)\n  }\n}\n\nwatch(pageLengthCount, (val, old_value) => {\n  if (val === old_value) return\n  emit('updatePageCount', val)\n})\n\nconst listBulkActionsRef = ref(null)\n\ndefineExpose({\n  customListActions: computed(\n    () => listBulkActionsRef.value?.customListActions,\n  ),\n})\n</script>\n","<template>\n  <LayoutHeader>\n    <template #left-header>\n      <ViewBreadcrumbs v-model=\"viewControls\" routeName=\"Call Logs\" />\n    </template>\n    <template #right-header>\n      <CustomActions\n        v-if=\"callLogsListView?.customListActions\"\n        :actions=\"callLogsListView.customListActions\"\n      />\n      <Button variant=\"solid\" :label=\"__('Create')\" @click=\"createCallLog\">\n        <template #prefix><FeatherIcon name=\"plus\" class=\"h-4\" /></template>\n      </Button>\n    </template>\n  </LayoutHeader>\n  <ViewControls\n    ref=\"viewControls\"\n    v-model=\"callLogs\"\n    v-model:loadMore=\"loadMore\"\n    v-model:resizeColumn=\"triggerResize\"\n    v-model:updatedPageCount=\"updatedPageCount\"\n    doctype=\"CRM Call Log\"\n  />\n  <CallLogsListView\n    ref=\"callLogsListView\"\n    v-if=\"callLogs.data && rows.length\"\n    v-model=\"callLogs.data.page_length_count\"\n    v-model:list=\"callLogs\"\n    :rows=\"rows\"\n    :columns=\"callLogs.data.columns\"\n    :options=\"{\n      showTooltip: false,\n      resizeColumn: true,\n      rowCount: callLogs.data.row_count,\n      totalCount: callLogs.data.total_count,\n    }\"\n    @showCallLog=\"showCallLog\"\n    @loadMore=\"() => loadMore++\"\n    @columnWidthUpdated=\"() => triggerResize++\"\n    @updatePageCount=\"(count) => (updatedPageCount = count)\"\n    @applyFilter=\"(data) => viewControls.applyFilter(data)\"\n    @applyLikeFilter=\"(data) => viewControls.applyLikeFilter(data)\"\n    @likeDoc=\"(data) => viewControls.likeDoc(data)\"\n    @selectionsChanged=\"\n      (selections) => viewControls.updateSelections(selections)\n    \"\n  />\n  <div\n    v-else-if=\"callLogs.data\"\n    class=\"flex h-full items-center justify-center\"\n  >\n    <div\n      class=\"flex flex-col items-center gap-3 text-xl font-medium text-ink-gray-4\"\n    >\n      <PhoneIcon class=\"h-10 w-10\" />\n      <span>{{ __('No {0} Found', [__('Logs')]) }}</span>\n    </div>\n  </div>\n  <CallLogDetailModal\n    v-model=\"showCallLogDetailModal\"\n    v-model:callLogModal=\"showCallLogModal\"\n    v-model:callLog=\"callLog\"\n  />\n  <CallLogModal\n    v-model=\"showCallLogModal\"\n    v-model:callLog=\"callLog\"\n    :options=\"{ afterInsert: () => callLogs.reload() }\"\n  />\n</template>\n\n<script setup>\nimport ViewBreadcrumbs from '@/components/ViewBreadcrumbs.vue'\nimport CustomActions from '@/components/CustomActions.vue'\nimport PhoneIcon from '@/components/Icons/PhoneIcon.vue'\nimport LayoutHeader from '@/components/LayoutHeader.vue'\nimport ViewControls from '@/components/ViewControls.vue'\nimport CallLogsListView from '@/components/ListViews/CallLogsListView.vue'\nimport CallLogDetailModal from '@/components/Modals/CallLogDetailModal.vue'\nimport CallLogModal from '@/components/Modals/CallLogModal.vue'\nimport { getCallLogDetail } from '@/utils/callLog'\nimport { createResource } from 'frappe-ui'\nimport { computed, ref } from 'vue'\n\nconst callLogsListView = ref(null)\nconst showCallLogModal = ref(false)\n\n// callLogs data is loaded in the ViewControls component\nconst callLogs = ref({})\nconst loadMore = ref(1)\nconst triggerResize = ref(1)\nconst updatedPageCount = ref(20)\nconst viewControls = ref(null)\n\nconst rows = computed(() => {\n  if (\n    !callLogs.value?.data?.data ||\n    !['list', 'group_by'].includes(callLogs.value.data.view_type)\n  )\n    return []\n  return callLogs.value?.data.data.map((callLog) => {\n    let _rows = {}\n    callLogs.value?.data.rows.forEach((row) => {\n      _rows[row] = getCallLogDetail(row, callLog, callLogs.value?.data.columns)\n    })\n    return _rows\n  })\n})\n\nconst showCallLogDetailModal = ref(false)\nconst callLog = ref({})\n\nfunction showCallLog(name) {\n  showCallLogDetailModal.value = true\n  callLog.value = createResource({\n    url: 'crm.fcrm.doctype.crm_call_log.crm_call_log.get_call_log',\n    params: { name },\n    cache: ['call_log', name],\n    auto: true,\n  })\n}\n\nfunction createCallLog() {\n  callLog.value = {}\n  showCallLogModal.value = true\n}\n</script>\n"],"names":["emit","__emit","pageLengthCount","_useModel","__props","list","isLikeFilterApplied","computed","_b","_a","user","sessionStore","isLiked","item","watch","val","old_value","listBulkActionsRef","ref","__expose","callLogsListView","showCallLogModal","callLogs","loadMore","triggerResize","updatedPageCount","viewControls","rows","_c","callLog","_rows","row","getCallLogDetail","showCallLogDetailModal","showCallLog","name","createResource","createCallLog"],"mappings":"q/DAwMA,MAAMA,EAAOC,EAWPC,EAAkBC,EAAYC,EAAA,YAAA,EAC9BC,EAAOF,EAAYC,EAAA,MAAM,EAEzBE,EAAsBC,EAAS,IAAM,SACzC,MAAO,IAAAC,GAAAC,EAAAJ,EAAK,MAAM,SAAX,YAAAI,EAAmB,UAAnB,MAAAD,EAA4B,UACrC,CAAC,EAEK,CAAE,KAAAE,CAAM,EAAGC,EAAa,EAE9B,SAASC,EAAQC,EAAM,CACrB,GAAIA,EAEF,OADgB,KAAK,MAAMA,CAAI,EACd,SAASH,CAAI,CAElC,CAEAI,EAAMZ,EAAiB,CAACa,EAAKC,IAAc,CACrCD,IAAQC,GACZhB,EAAK,kBAAmBe,CAAG,CAC7B,CAAC,EAED,MAAME,EAAqBC,EAAI,IAAI,EAEnC,OAAAC,EAAa,CACX,kBAAmBZ,EACjB,IAAM,OAAA,OAAAE,EAAAQ,EAAmB,QAAnB,YAAAR,EAA0B,kBACjC,CACH,CAAC,6yGC3JD,MAAMW,EAAmBF,EAAI,IAAI,EAC3BG,EAAmBH,EAAI,EAAK,EAG5BI,EAAWJ,EAAI,EAAE,EACjBK,EAAWL,EAAI,CAAC,EAChBM,EAAgBN,EAAI,CAAC,EACrBO,EAAmBP,EAAI,EAAE,EACzBQ,EAAeR,EAAI,IAAI,EAEvBS,EAAOpB,EAAS,IAAM,WAC1B,MACE,GAACC,GAAAC,EAAAa,EAAS,QAAT,YAAAb,EAAgB,OAAhB,MAAAD,EAAsB,OACvB,CAAC,CAAC,OAAQ,UAAU,EAAE,SAASc,EAAS,MAAM,KAAK,SAAS,EAErD,CAAC,GACHM,EAAAN,EAAS,QAAT,YAAAM,EAAgB,KAAK,KAAK,IAAKC,GAAY,OAChD,IAAIC,EAAQ,CAAC,EACb,OAAArB,EAAAa,EAAS,QAAT,MAAAb,EAAgB,KAAK,KAAK,QAASsB,GAAQ,OACzCD,EAAMC,CAAG,EAAIC,GAAiBD,EAAKF,GAASpB,EAAAa,EAAS,QAAT,YAAAb,EAAgB,KAAK,OAAO,CAC9E,GACWqB,CACX,EACA,CAAC,EAEKG,EAAyBf,EAAI,EAAK,EAClCW,EAAUX,EAAI,EAAE,EAEtB,SAASgB,EAAYC,EAAM,CACzBF,EAAuB,MAAQ,GAC/BJ,EAAQ,MAAQO,EAAe,CAC7B,IAAK,0DACL,OAAQ,CAAE,KAAAD,CAAM,EAChB,MAAO,CAAC,WAAYA,CAAI,EACxB,KAAM,EACV,CAAG,CACH,CAEA,SAASE,GAAgB,CACvBR,EAAQ,MAAQ,CAAC,EACjBR,EAAiB,MAAQ,EAC3B"}