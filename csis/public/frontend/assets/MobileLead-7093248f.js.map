{"version":3,"file":"MobileLead-7093248f.js","sources":["../../../../frontend/src/pages/MobileLead.vue"],"sourcesContent":["<template>\n  <LayoutHeader v-if=\"lead.data\">\n    <header\n      class=\"relative flex h-10.5 items-center justify-between gap-2 py-2.5 pl-2\"\n    >\n      <Breadcrumbs :items=\"breadcrumbs\">\n        <template #prefix=\"{ item }\">\n          <Icon v-if=\"item.icon\" :icon=\"item.icon\" class=\"mr-2 h-4\" />\n        </template>\n      </Breadcrumbs>\n      <div class=\"absolute right-0\">\n        <Dropdown\n          :options=\"\n            statusOptions('lead', updateField, lead.data._customStatuses)\n          \"\n        >\n          <template #default=\"{ open }\">\n            <Button :label=\"lead.data.status\">\n              <template #prefix>\n                <IndicatorIcon :class=\"getLeadStatus(lead.data.status).color\" />\n              </template>\n              <template #suffix>\n                <FeatherIcon\n                  :name=\"open ? 'chevron-up' : 'chevron-down'\"\n                  class=\"h-4\"\n                />\n              </template>\n            </Button>\n          </template>\n        </Dropdown>\n      </div>\n    </header>\n  </LayoutHeader>\n  <div\n    v-if=\"lead.data\"\n    class=\"flex h-12 items-center justify-between gap-2 border-b px-3 py-2.5\"\n  >\n    <AssignTo\n      v-model=\"lead.data._assignedTo\"\n      :data=\"lead.data\"\n      doctype=\"CRM Lead\"\n    />\n    <div class=\"flex items-center gap-2\">\n      <CustomActions\n        v-if=\"lead.data._customActions?.length\"\n        :actions=\"lead.data._customActions\"\n      />\n      <Button\n        :label=\"__('Convert')\"\n        variant=\"solid\"\n        @click=\"showConvertToDealModal = true\"\n      />\n    </div>\n  </div>\n  <div v-if=\"lead?.data\" class=\"flex h-full overflow-hidden\">\n    <Tabs as=\"div\" v-model=\"tabIndex\" :tabs=\"tabs\" class=\"overflow-auto\">\n      <TabList class=\"!px-3\" />\n      <TabPanel v-slot=\"{ tab }\">\n        <div v-if=\"tab.name == 'Details'\">\n          <SLASection\n            v-if=\"lead.data.sla_status\"\n            v-model=\"lead.data\"\n            @updateField=\"updateField\"\n          />\n          <div\n            v-if=\"sections.data\"\n            class=\"flex flex-1 flex-col justify-between overflow-hidden\"\n          >\n            <SidePanelLayout\n              :sections=\"sections.data\"\n              doctype=\"CRM Lead\"\n              :docname=\"lead.data.name\"\n              @reload=\"sections.reload\"\n            />\n          </div>\n        </div>\n        <Activities\n          v-else\n          doctype=\"CRM Lead\"\n          :tabs=\"tabs\"\n          v-model:reload=\"reload\"\n          v-model:tabIndex=\"tabIndex\"\n          v-model=\"lead\"\n        />\n      </TabPanel>\n    </Tabs>\n  </div>\n  <Dialog\n    v-model=\"showConvertToDealModal\"\n    :options=\"{\n      title: __('Convert to Deal'),\n      size: 'xl',\n      actions: [\n        {\n          label: __('Convert'),\n          variant: 'solid',\n          onClick: convertToDeal,\n        },\n      ],\n    }\"\n  >\n    <template #body-content>\n      <div class=\"mb-4 flex items-center gap-2 text-ink-gray-5\">\n        <OrganizationsIcon class=\"h-4 w-4\" />\n        <label class=\"block text-base\">{{ __('Organization') }}</label>\n      </div>\n      <div class=\"ml-6\">\n        <div class=\"flex items-center justify-between text-base\">\n          <div>{{ __('Choose Existing') }}</div>\n          <Switch v-model=\"existingOrganizationChecked\" />\n        </div>\n        <Link\n          v-if=\"existingOrganizationChecked\"\n          class=\"form-control mt-2.5\"\n          variant=\"outline\"\n          size=\"md\"\n          :value=\"existingOrganization\"\n          doctype=\"CRM Organization\"\n          @change=\"(data) => (existingOrganization = data)\"\n        />\n        <div v-else class=\"mt-2.5 text-base\">\n          {{\n            __(\n              'New organization will be created based on the data in details section',\n            )\n          }}\n        </div>\n      </div>\n\n      <div class=\"mb-4 mt-6 flex items-center gap-2 text-ink-gray-5\">\n        <ContactsIcon class=\"h-4 w-4\" />\n        <label class=\"block text-base\">{{ __('Contact') }}</label>\n      </div>\n      <div class=\"ml-6\">\n        <div class=\"flex items-center justify-between text-base\">\n          <div>{{ __('Choose Existing') }}</div>\n          <Switch v-model=\"existingContactChecked\" />\n        </div>\n        <Link\n          v-if=\"existingContactChecked\"\n          class=\"form-control mt-2.5\"\n          variant=\"outline\"\n          size=\"md\"\n          :value=\"existingContact\"\n          doctype=\"Contact\"\n          @change=\"(data) => (existingContact = data)\"\n        />\n        <div v-else class=\"mt-2.5 text-base\">\n          {{ __(\"New contact will be created based on the person's details\") }}\n        </div>\n      </div>\n    </template>\n  </Dialog>\n</template>\n<script setup>\nimport Icon from '@/components/Icon.vue'\nimport DetailsIcon from '@/components/Icons/DetailsIcon.vue'\nimport ActivityIcon from '@/components/Icons/ActivityIcon.vue'\nimport EmailIcon from '@/components/Icons/EmailIcon.vue'\nimport CommentIcon from '@/components/Icons/CommentIcon.vue'\nimport PhoneIcon from '@/components/Icons/PhoneIcon.vue'\nimport TaskIcon from '@/components/Icons/TaskIcon.vue'\nimport NoteIcon from '@/components/Icons/NoteIcon.vue'\nimport AttachmentIcon from '@/components/Icons/AttachmentIcon.vue'\nimport WhatsAppIcon from '@/components/Icons/WhatsAppIcon.vue'\nimport IndicatorIcon from '@/components/Icons/IndicatorIcon.vue'\nimport OrganizationsIcon from '@/components/Icons/OrganizationsIcon.vue'\nimport ContactsIcon from '@/components/Icons/ContactsIcon.vue'\nimport LayoutHeader from '@/components/LayoutHeader.vue'\nimport Activities from '@/components/Activities/Activities.vue'\nimport AssignTo from '@/components/AssignTo.vue'\nimport Link from '@/components/Controls/Link.vue'\nimport SidePanelLayout from '@/components/SidePanelLayout.vue'\nimport SLASection from '@/components/SLASection.vue'\nimport CustomActions from '@/components/CustomActions.vue'\nimport { setupAssignees, setupCustomizations } from '@/utils'\nimport { getView } from '@/utils/view'\nimport { getSettings } from '@/stores/settings'\nimport { globalStore } from '@/stores/global'\nimport { statusesStore } from '@/stores/statuses'\nimport { getMeta } from '@/stores/meta'\nimport {\n  whatsappEnabled,\n  callEnabled,\n  isMobileView,\n} from '@/composables/settings'\nimport { capture } from '@/telemetry'\nimport { useActiveTabManager } from '@/composables/useActiveTabManager'\nimport {\n  createResource,\n  Dropdown,\n  Tabs,\n  TabList,\n  TabPanel,\n  Switch,\n  Breadcrumbs,\n  call,\n  usePageMeta,\n  toast,\n} from 'frappe-ui'\nimport { ref, computed, onMounted, watch } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\n\nconst { brand } = getSettings()\nconst { $dialog, $socket } = globalStore()\nconst { statusOptions, getLeadStatus } = statusesStore()\nconst { doctypeMeta } = getMeta('CRM Lead')\nconst route = useRoute()\nconst router = useRouter()\n\nconst props = defineProps({\n  leadId: {\n    type: String,\n    required: true,\n  },\n})\n\nconst lead = createResource({\n  url: 'crm.fcrm.doctype.crm_lead.api.get_lead',\n  params: { name: props.leadId },\n  cache: ['lead', props.leadId],\n  onSuccess: (data) => {\n    setupAssignees(lead)\n    setupCustomizations(lead, {\n      doc: data,\n      $dialog,\n      $socket,\n      router,\n      toast,\n      updateField,\n      createToast: toast.create,\n      deleteDoc: deleteLead,\n      resource: {\n        lead,\n        sections,\n      },\n      call,\n    })\n  },\n})\n\nonMounted(() => {\n  if (lead.data) return\n  lead.fetch()\n})\n\nconst reload = ref(false)\n\nfunction updateLead(fieldname, value, callback) {\n  value = Array.isArray(fieldname) ? '' : value\n\n  if (!Array.isArray(fieldname) && validateRequired(fieldname, value)) return\n\n  createResource({\n    url: 'frappe.client.set_value',\n    params: {\n      doctype: 'CRM Lead',\n      name: props.leadId,\n      fieldname,\n      value,\n    },\n    auto: true,\n    onSuccess: () => {\n      lead.reload()\n      reload.value = true\n      toast.success(__('Lead updated successfully'))\n      callback?.()\n    },\n    onError: (err) => {\n      toast.error(__(err.messages?.[0] || 'Error updating lead'))\n    },\n  })\n}\n\nfunction validateRequired(fieldname, value) {\n  let meta = lead.data.fields_meta || {}\n  if (meta[fieldname]?.reqd && !value) {\n    toast.error(__('{0} is a required field', [meta[fieldname].label]))\n    return true\n  }\n  return false\n}\n\nconst breadcrumbs = computed(() => {\n  let items = [{ label: __('Leads'), route: { name: 'Leads' } }]\n\n  if (route.query.view || route.query.viewType) {\n    let view = getView(route.query.view, route.query.viewType, 'CRM Lead')\n    if (view) {\n      items.push({\n        label: __(view.label),\n        icon: view.icon,\n        route: {\n          name: 'Leads',\n          params: { viewType: route.query.viewType },\n          query: { view: route.query.view },\n        },\n      })\n    }\n  }\n\n  items.push({\n    label: title.value,\n    route: { name: 'Lead', params: { leadId: lead.data.name } },\n  })\n  return items\n})\n\nconst title = computed(() => {\n  let t = doctypeMeta['CRM Lead']?.title_field || 'name'\n  return lead.data?.[t] || props.leadId\n})\n\nusePageMeta(() => {\n  return {\n    title: title.value,\n    icon: brand.favicon,\n  }\n})\n\nconst tabs = computed(() => {\n  let tabOptions = [\n    {\n      name: 'Details',\n      label: __('Details'),\n      icon: DetailsIcon,\n      condition: () => isMobileView.value,\n    },\n    {\n      name: 'Activity',\n      label: __('Activity'),\n      icon: ActivityIcon,\n    },\n    {\n      name: 'Emails',\n      label: __('Emails'),\n      icon: EmailIcon,\n    },\n    {\n      name: 'Comments',\n      label: __('Comments'),\n      icon: CommentIcon,\n    },\n    {\n      name: 'Data',\n      label: __('Data'),\n      icon: DetailsIcon,\n    },\n    {\n      name: 'Calls',\n      label: __('Calls'),\n      icon: PhoneIcon,\n      condition: () => callEnabled.value,\n    },\n    {\n      name: 'Tasks',\n      label: __('Tasks'),\n      icon: TaskIcon,\n    },\n    {\n      name: 'Notes',\n      label: __('Notes'),\n      icon: NoteIcon,\n    },\n    {\n      name: 'Attachments',\n      label: __('Attachments'),\n      icon: AttachmentIcon,\n    },\n    {\n      name: 'WhatsApp',\n      label: __('WhatsApp'),\n      icon: WhatsAppIcon,\n      condition: () => whatsappEnabled.value,\n    },\n  ]\n  return tabOptions.filter((tab) => (tab.condition ? tab.condition() : true))\n})\nconst { tabIndex } = useActiveTabManager(tabs, 'lastLeadTab')\n\nwatch(tabs, (value) => {\n  if (value && route.params.tabName) {\n    let index = value.findIndex(\n      (tab) => tab.name.toLowerCase() === route.params.tabName.toLowerCase(),\n    )\n    if (index !== -1) {\n      tabIndex.value = index\n    }\n  }\n})\n\nconst sections = createResource({\n  url: 'crm.fcrm.doctype.crm_fields_layout.crm_fields_layout.get_sidepanel_sections',\n  cache: ['sidePanelSections', 'CRM Lead'],\n  params: { doctype: 'CRM Lead' },\n  auto: true,\n})\n\nfunction updateField(name, value, callback) {\n  updateLead(name, value, () => {\n    lead.data[name] = value\n    callback?.()\n  })\n}\n\nasync function deleteLead(name) {\n  await call('frappe.client.delete', {\n    doctype: 'CRM Lead',\n    name,\n  })\n  router.push({ name: 'Leads' })\n}\n\n// Convert to Deal\nconst showConvertToDealModal = ref(false)\nconst existingContactChecked = ref(false)\nconst existingOrganizationChecked = ref(false)\n\nconst existingContact = ref('')\nconst existingOrganization = ref('')\n\nasync function convertToDeal() {\n  if (existingContactChecked.value && !existingContact.value) {\n    toast.error(__('Please select an existing contact'))\n    return\n  }\n\n  if (existingOrganizationChecked.value && !existingOrganization.value) {\n    toast.error(__('Please select an existing organization'))\n    return\n  }\n\n  if (!existingContactChecked.value && existingContact.value) {\n    existingContact.value = ''\n  }\n\n  if (!existingOrganizationChecked.value && existingOrganization.value) {\n    existingOrganization.value = ''\n  }\n\n  let deal = await call('crm.fcrm.doctype.crm_lead.crm_lead.convert_to_deal', {\n    lead: lead.data.name,\n    deal: {},\n    existing_contact: existingContact.value,\n    existing_organization: existingOrganization.value,\n  })\n  if (deal) {\n    showConvertToDealModal.value = false\n    existingContactChecked.value = false\n    existingOrganizationChecked.value = false\n    existingContact.value = ''\n    existingOrganization.value = ''\n    capture('convert_lead_to_deal')\n    router.push({ name: 'Deal', params: { dealId: deal } })\n  }\n}\n</script>\n"],"names":["brand","getSettings","$dialog","$socket","globalStore","statusOptions","getLeadStatus","statusesStore","doctypeMeta","getMeta","route","useRoute","router","useRouter","props","__props","lead","createResource","data","setupAssignees","setupCustomizations","toast","updateField","deleteLead","sections","call","onMounted","reload","ref","updateLead","fieldname","value","callback","validateRequired","err","_a","meta","breadcrumbs","computed","items","view","getView","title","t","_b","usePageMeta","tabs","DetailsIcon","isMobileView","ActivityIcon","EmailIcon","CommentIcon","PhoneIcon","callEnabled","TaskIcon","NoteIcon","AttachmentIcon","WhatsAppIcon","whatsappEnabled","tab","tabIndex","useActiveTabManager","watch","index","name","showConvertToDealModal","existingContactChecked","existingOrganizationChecked","existingContact","existingOrganization","convertToDeal","deal","capture"],"mappings":"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"}