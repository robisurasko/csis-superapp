{"version":3,"file":"Contact-f620738b.js","sources":["../../../../frontend/src/pages/Contact.vue"],"sourcesContent":["<template>\n  <LayoutHeader v-if=\"contact.data\">\n    <template #left-header>\n      <Breadcrumbs :items=\"breadcrumbs\">\n        <template #prefix=\"{ item }\">\n          <Icon v-if=\"item.icon\" :icon=\"item.icon\" class=\"mr-2 h-4\" />\n        </template>\n      </Breadcrumbs>\n    </template>\n  </LayoutHeader>\n  <div v-if=\"contact.data\" ref=\"parentRef\" class=\"flex h-full\">\n    <Resizer\n      v-if=\"contact.data\"\n      :parent=\"$refs.parentRef\"\n      class=\"flex h-full flex-col overflow-hidden border-r\"\n    >\n      <div class=\"border-b\">\n        <FileUploader\n          @success=\"changeContactImage\"\n          :validateFile=\"validateFile\"\n        >\n          <template #default=\"{ openFileSelector, error }\">\n            <div class=\"flex flex-col items-start justify-start gap-4 p-5\">\n              <div class=\"flex gap-4 items-center\">\n                <div class=\"group relative h-15.5 w-15.5\">\n                  <Avatar\n                    size=\"3xl\"\n                    class=\"h-15.5 w-15.5\"\n                    :label=\"contact.data.full_name\"\n                    :image=\"contact.data.image\"\n                  />\n                  <component\n                    :is=\"contact.data.image ? Dropdown : 'div'\"\n                    v-bind=\"\n                      contact.data.image\n                        ? {\n                            options: [\n                              {\n                                icon: 'upload',\n                                label: contact.data.image\n                                  ? __('Change image')\n                                  : __('Upload image'),\n                                onClick: openFileSelector,\n                              },\n                              {\n                                icon: 'trash-2',\n                                label: __('Remove image'),\n                                onClick: () => changeContactImage(''),\n                              },\n                            ],\n                          }\n                        : { onClick: openFileSelector }\n                    \"\n                    class=\"!absolute bottom-0 left-0 right-0\"\n                  >\n                    <div\n                      class=\"z-1 absolute bottom-0 left-0 right-0 flex h-14 cursor-pointer items-center justify-center rounded-b-full bg-black bg-opacity-40 pt-5 opacity-0 duration-300 ease-in-out group-hover:opacity-100\"\n                      style=\"\n                        -webkit-clip-path: inset(22px 0 0 0);\n                        clip-path: inset(22px 0 0 0);\n                      \"\n                    >\n                      <CameraIcon class=\"h-6 w-6 cursor-pointer text-white\" />\n                    </div>\n                  </component>\n                </div>\n                <div class=\"flex flex-col gap-2 truncate text-ink-gray-9\">\n                  <div class=\"truncate text-2xl font-medium\">\n                    <span v-if=\"contact.data.salutation\">\n                      {{ contact.data.salutation + '. ' }}\n                    </span>\n                    <span>{{ contact.data.full_name }}</span>\n                  </div>\n                  <div\n                    v-if=\"contact.data.company_name\"\n                    class=\"flex items-center gap-1.5 text-base text-ink-gray-8\"\n                  >\n                    <Avatar\n                      size=\"xs\"\n                      :label=\"contact.data.company_name\"\n                      :image=\"\n                        getOrganization(contact.data.company_name)\n                          ?.organization_logo\n                      \"\n                    />\n                    <span class=\"\">{{ contact.data.company_name }}</span>\n                  </div>\n                  <ErrorMessage :message=\"__(error)\" />\n                </div>\n              </div>\n              <div class=\"flex gap-1.5\">\n                <Button\n                  v-if=\"contact.data.actual_mobile_no\"\n                  :label=\"__('Make Call')\"\n                  size=\"sm\"\n                  @click=\"\n                    callEnabled && makeCall(contact.data.actual_mobile_no)\n                  \"\n                >\n                  <template #prefix>\n                    <PhoneIcon class=\"h-4 w-4\" />\n                  </template>\n                </Button>\n                <Button\n                  :label=\"__('Delete')\"\n                  theme=\"red\"\n                  size=\"sm\"\n                  @click=\"deleteContact\"\n                >\n                  <template #prefix>\n                    <FeatherIcon name=\"trash-2\" class=\"h-4 w-4\" />\n                  </template>\n                </Button>\n              </div>\n            </div>\n          </template>\n        </FileUploader>\n      </div>\n      <div\n        v-if=\"sections.data\"\n        class=\"flex flex-1 flex-col justify-between overflow-hidden\"\n      >\n        <SidePanelLayout\n          :sections=\"sections.data\"\n          doctype=\"Contact\"\n          :docname=\"contact.data.name\"\n          @reload=\"sections.reload\"\n        />\n      </div>\n    </Resizer>\n    <Tabs as=\"div\" v-model=\"tabIndex\" :tabs=\"tabs\">\n      <template #tab-item=\"{ tab, selected }\">\n        <button\n          class=\"group flex items-center gap-2 border-b border-transparent py-2.5 text-base text-ink-gray-5 duration-300 ease-in-out hover:border-outline-gray-3 hover:text-ink-gray-9\"\n          :class=\"{ 'text-ink-gray-9': selected }\"\n        >\n          <component v-if=\"tab.icon\" :is=\"tab.icon\" class=\"h-5\" />\n          {{ __(tab.label) }}\n          <Badge\n            class=\"group-hover:bg-surface-gray-7\"\n            :class=\"[selected ? 'bg-surface-gray-7' : 'bg-gray-600']\"\n            variant=\"solid\"\n            theme=\"gray\"\n            size=\"sm\"\n          >\n            {{ tab.count }}\n          </Badge>\n        </button>\n      </template>\n      <template #tab-panel=\"{ tab }\">\n        <DealsListView\n          v-if=\"tab.label === 'Deals' && rows.length\"\n          class=\"mt-4\"\n          :rows=\"rows\"\n          :columns=\"columns\"\n          :options=\"{ selectable: false, showTooltip: false }\"\n        />\n        <div\n          v-if=\"!rows.length\"\n          class=\"grid flex-1 place-items-center text-xl font-medium text-ink-gray-4\"\n        >\n          <div class=\"flex flex-col items-center justify-center space-y-3\">\n            <component :is=\"tab.icon\" class=\"!h-10 !w-10\" />\n            <div>{{ __('No {0} Found', [__(tab.label)]) }}</div>\n          </div>\n        </div>\n      </template>\n    </Tabs>\n  </div>\n  <ErrorPage\n    v-else-if=\"errorTitle\"\n    :errorTitle=\"errorTitle\"\n    :errorMessage=\"errorMessage\"\n  />\n  <AddressModal v-model=\"showAddressModal\" v-model:address=\"_address\" />\n</template>\n\n<script setup>\nimport ErrorPage from '@/components/ErrorPage.vue'\nimport Resizer from '@/components/Resizer.vue'\nimport Icon from '@/components/Icon.vue'\nimport SidePanelLayout from '@/components/SidePanelLayout.vue'\nimport LayoutHeader from '@/components/LayoutHeader.vue'\nimport PhoneIcon from '@/components/Icons/PhoneIcon.vue'\nimport CameraIcon from '@/components/Icons/CameraIcon.vue'\nimport DealsIcon from '@/components/Icons/DealsIcon.vue'\nimport DealsListView from '@/components/ListViews/DealsListView.vue'\nimport AddressModal from '@/components/Modals/AddressModal.vue'\nimport { formatDate, timeAgo } from '@/utils'\nimport { getView } from '@/utils/view'\nimport { getSettings } from '@/stores/settings'\nimport { getMeta } from '@/stores/meta'\nimport { globalStore } from '@/stores/global.js'\nimport { usersStore } from '@/stores/users.js'\nimport { organizationsStore } from '@/stores/organizations.js'\nimport { statusesStore } from '@/stores/statuses'\nimport { callEnabled } from '@/composables/settings'\nimport {\n  Breadcrumbs,\n  Avatar,\n  FileUploader,\n  Tabs,\n  call,\n  createResource,\n  usePageMeta,\n  Dropdown,\n  toast,\n} from 'frappe-ui'\nimport { ref, computed, h } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { errorMessage as _errorMessage } from '../utils'\n\nconst { brand } = getSettings()\nconst { $dialog, makeCall } = globalStore()\n\nconst { getUser } = usersStore()\nconst { getOrganization } = organizationsStore()\nconst { getDealStatus } = statusesStore()\nconst { doctypeMeta } = getMeta('Contact')\n\nconst props = defineProps({\n  contactId: {\n    type: String,\n    required: true,\n  },\n})\n\nconst route = useRoute()\nconst router = useRouter()\n\nconst showAddressModal = ref(false)\nconst _contact = ref({})\nconst _address = ref({})\n\nconst errorTitle = ref('')\nconst errorMessage = ref('')\n\nconst contact = createResource({\n  url: 'crm.api.contact.get_contact',\n  cache: ['contact', props.contactId],\n  params: { name: props.contactId },\n  auto: true,\n  transform: (data) => {\n    return {\n      ...data,\n      actual_mobile_no: data.mobile_no,\n      mobile_no: data.mobile_no,\n    }\n  },\n  onSuccess: () => {\n    errorTitle.value = ''\n    errorMessage.value = ''\n  },\n  onError: (err) => {\n    if (err.messages?.[0]) {\n      errorTitle.value = __('Not permitted')\n      errorMessage.value = __(err.messages?.[0])\n    } else {\n      router.push({ name: 'Contacts' })\n    }\n  },\n})\n\nconst breadcrumbs = computed(() => {\n  let items = [{ label: __('Contacts'), route: { name: 'Contacts' } }]\n\n  if (route.query.view || route.query.viewType) {\n    let view = getView(route.query.view, route.query.viewType, 'Contact')\n    if (view) {\n      items.push({\n        label: __(view.label),\n        icon: view.icon,\n        route: {\n          name: 'Contacts',\n          params: { viewType: route.query.viewType },\n          query: { view: route.query.view },\n        },\n      })\n    }\n  }\n\n  items.push({\n    label: title.value,\n    route: { name: 'Contact', params: { contactId: props.contactId } },\n  })\n  return items\n})\n\nconst title = computed(() => {\n  let t = doctypeMeta['Contact']?.title_field || 'name'\n  return contact.data?.[t] || props.contactId\n})\n\nusePageMeta(() => {\n  return {\n    title: title.value,\n    icon: brand.favicon,\n  }\n})\n\nfunction validateFile(file) {\n  let extn = file.name.split('.').pop().toLowerCase()\n  if (!['png', 'jpg', 'jpeg'].includes(extn)) {\n    return __('Only PNG and JPG images are allowed')\n  }\n}\n\nasync function changeContactImage(file) {\n  await call('frappe.client.set_value', {\n    doctype: 'Contact',\n    name: props.contactId,\n    fieldname: 'image',\n    value: file?.file_url || '',\n  })\n  contact.reload()\n}\n\nasync function deleteContact() {\n  $dialog({\n    title: __('Delete contact'),\n    message: __('Are you sure you want to delete this contact?'),\n    actions: [\n      {\n        label: __('Delete'),\n        theme: 'red',\n        variant: 'solid',\n        async onClick(close) {\n          await call('frappe.client.delete', {\n            doctype: 'Contact',\n            name: props.contactId,\n          })\n          close()\n          router.push({ name: 'Contacts' })\n        },\n      },\n    ],\n  })\n}\n\nconst tabIndex = ref(0)\nconst tabs = [\n  {\n    label: 'Deals',\n    icon: h(DealsIcon, { class: 'h-4 w-4' }),\n    count: computed(() => deals.data?.length),\n  },\n]\n\nconst deals = createResource({\n  url: 'crm.api.contact.get_linked_deals',\n  cache: ['deals', props.contactId],\n  params: {\n    contact: props.contactId,\n  },\n  auto: true,\n})\n\nconst rows = computed(() => {\n  if (!deals.data || deals.data == []) return []\n\n  return deals.data.map((row) => getDealRowObject(row))\n})\n\nconst sections = createResource({\n  url: 'crm.fcrm.doctype.crm_fields_layout.crm_fields_layout.get_sidepanel_sections',\n  cache: ['sidePanelSections', 'Contact'],\n  params: { doctype: 'Contact' },\n  auto: true,\n  transform: (data) => computed(() => getParsedSections(data)),\n})\n\nfunction getParsedSections(_sections) {\n  return _sections.map((section) => {\n    section.columns = section.columns.map((column) => {\n      column.fields = column.fields.map((field) => {\n        if (field.fieldname === 'email_id') {\n          return {\n            ...field,\n            read_only: false,\n            fieldtype: 'Dropdown',\n            options:\n              contact.data?.email_ids?.map((email) => {\n                return {\n                  name: email.name,\n                  value: email.email_id,\n                  selected: email.email_id === contact.data.email_id,\n                  placeholder: 'john@doe.com',\n                  onClick: () => {\n                    _contact.value.email_id = email.email_id\n                    setAsPrimary('email', email.email_id)\n                  },\n                  onSave: (option, isNew) => {\n                    if (isNew) {\n                      createNew('email', option.value)\n                      if (contact.data.email_ids.length === 1) {\n                        _contact.value.email_id = option.value\n                      }\n                    } else {\n                      editOption(\n                        'Contact Email',\n                        option.name,\n                        'email_id',\n                        option.value,\n                      )\n                    }\n                  },\n                  onDelete: async (option, isNew) => {\n                    contact.data.email_ids = contact.data.email_ids.filter(\n                      (email) => email.name !== option.name,\n                    )\n                    !isNew && (await deleteOption('Contact Email', option.name))\n                    if (_contact.value.email_id === option.value) {\n                      if (contact.data.email_ids.length === 0) {\n                        _contact.value.email_id = ''\n                      } else {\n                        _contact.value.email_id = contact.data.email_ids.find(\n                          (email) => email.is_primary,\n                        )?.email_id\n                      }\n                    }\n                  },\n                }\n              }) || [],\n            create: () => {\n              contact.data?.email_ids?.push({\n                name: 'new-1',\n                value: '',\n                selected: false,\n                isNew: true,\n              })\n            },\n          }\n        } else if (field.fieldname === 'mobile_no') {\n          return {\n            ...field,\n            read_only: false,\n            fieldtype: 'Dropdown',\n            options:\n              contact.data?.phone_nos?.map((phone) => {\n                return {\n                  name: phone.name,\n                  value: phone.phone,\n                  selected: phone.phone === contact.data.actual_mobile_no,\n                  onClick: () => {\n                    _contact.value.actual_mobile_no = phone.phone\n                    _contact.value.mobile_no = phone.phone\n                    setAsPrimary('mobile_no', phone.phone)\n                  },\n                  onSave: (option, isNew) => {\n                    if (isNew) {\n                      createNew('phone', option.value)\n                      if (contact.data.phone_nos.length === 1) {\n                        _contact.value.actual_mobile_no = option.value\n                      }\n                    } else {\n                      editOption(\n                        'Contact Phone',\n                        option.name,\n                        'phone',\n                        option.value,\n                      )\n                    }\n                  },\n                  onDelete: async (option, isNew) => {\n                    contact.data.phone_nos = contact.data.phone_nos.filter(\n                      (phone) => phone.name !== option.name,\n                    )\n                    !isNew && (await deleteOption('Contact Phone', option.name))\n                    if (_contact.value.actual_mobile_no === option.value) {\n                      if (contact.data.phone_nos.length === 0) {\n                        _contact.value.actual_mobile_no = ''\n                      } else {\n                        _contact.value.actual_mobile_no =\n                          contact.data.phone_nos.find(\n                            (phone) => phone.is_primary_mobile_no,\n                          )?.phone\n                      }\n                    }\n                  },\n                }\n              }) || [],\n            create: () => {\n              contact.data?.phone_nos?.push({\n                name: 'new-1',\n                value: '',\n                selected: false,\n                isNew: true,\n              })\n            },\n          }\n        } else if (field.fieldname === 'address') {\n          return {\n            ...field,\n            create: (value, close) => {\n              _contact.value.address = value\n              _address.value = {}\n              showAddressModal.value = true\n              close()\n            },\n            edit: async (addr) => {\n              _address.value = await call('frappe.client.get', {\n                doctype: 'Address',\n                name: addr,\n              })\n              showAddressModal.value = true\n            },\n          }\n        } else {\n          return field\n        }\n      })\n      return column\n    })\n    return section\n  })\n}\n\nasync function setAsPrimary(field, value) {\n  let d = await call('crm.api.contact.set_as_primary', {\n    contact: contact.data.name,\n    field,\n    value,\n  })\n  if (d) {\n    contact.reload()\n    toast.success(__('Contact updated'))\n  }\n}\n\nasync function createNew(field, value) {\n  if (!value) return\n  let d = await call('crm.api.contact.create_new', {\n    contact: contact.data.name,\n    field,\n    value,\n  })\n  if (d) {\n    contact.reload()\n    toast.success(__('Contact updated'))\n  }\n}\n\nasync function editOption(doctype, name, fieldname, value) {\n  let d = await call('frappe.client.set_value', {\n    doctype,\n    name,\n    fieldname,\n    value,\n  })\n  if (d) {\n    contact.reload()\n    toast.success(__('Contact updated'))\n  }\n}\n\nasync function deleteOption(doctype, name) {\n  await call('frappe.client.delete', {\n    doctype,\n    name,\n  })\n  await contact.reload()\n  toast.success(__('Contact updated'))\n}\n\nasync function updateField(fieldname, value) {\n  await call('frappe.client.set_value', {\n    doctype: 'Contact',\n    name: props.contactId,\n    fieldname,\n    value,\n  })\n  toast.success(__('Contact updated'))\n\n  contact.reload()\n}\n\nconst { getFormattedCurrency } = getMeta('CRM Deal')\n\nconst columns = computed(() => dealColumns)\n\nfunction getDealRowObject(deal) {\n  return {\n    name: deal.name,\n    organization: {\n      label: deal.organization,\n      logo: getOrganization(deal.organization)?.organization_logo,\n    },\n    annual_revenue: getFormattedCurrency('annual_revenue', deal),\n    status: {\n      label: deal.status,\n      color: getDealStatus(deal.status)?.color,\n    },\n    email: deal.email,\n    mobile_no: deal.mobile_no,\n    deal_owner: {\n      label: deal.deal_owner && getUser(deal.deal_owner).full_name,\n      ...(deal.deal_owner && getUser(deal.deal_owner)),\n    },\n    modified: {\n      label: formatDate(deal.modified),\n      timeAgo: __(timeAgo(deal.modified)),\n    },\n  }\n}\n\nconst dealColumns = [\n  {\n    label: __('Organization'),\n    key: 'organization',\n    width: '11rem',\n  },\n  {\n    label: __('Amount'),\n    key: 'annual_revenue',\n    align: 'right',\n    width: '9rem',\n  },\n  {\n    label: __('Status'),\n    key: 'status',\n    width: '10rem',\n  },\n  {\n    label: __('Email'),\n    key: 'email',\n    width: '12rem',\n  },\n  {\n    label: __('Mobile no'),\n    key: 'mobile_no',\n    width: '11rem',\n  },\n  {\n    label: __('Deal owner'),\n    key: 'deal_owner',\n    width: '10rem',\n  },\n  {\n    label: __('Last modified'),\n    key: 'modified',\n    width: '8rem',\n  },\n]\n</script>\n"],"names":["brand","getSettings","$dialog","makeCall","globalStore","getUser","usersStore","getOrganization","organizationsStore","getDealStatus","statusesStore","doctypeMeta","getMeta","props","__props","route","useRoute","router","useRouter","showAddressModal","ref","_contact","_address","errorTitle","errorMessage","contact","createResource","data","err","_a","_b","breadcrumbs","computed","items","view","getView","title","t","usePageMeta","validateFile","file","extn","changeContactImage","call","deleteContact","close","tabIndex","tabs","h","DealsIcon","deals","rows","row","getDealRowObject","sections","getParsedSections","_sections","section","column","field","email","setAsPrimary","option","isNew","createNew","editOption","deleteOption","_d","_c","phone","value","addr","toast","doctype","name","fieldname","getFormattedCurrency","columns","dealColumns","deal","formatDate","timeAgo"],"mappings":"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"}